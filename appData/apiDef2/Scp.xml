<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="494378815" sourceXmlPath="C:/ck2000/appData/apiDef2/Scp.xml" license="Ssh" hasEvents="1" baseProgress="1">
    <genericName>Scp</genericName>
    <cppName>CkScp</cppName>
    <dnName>Scp</dnName>
    <axName>ChilkatScp</axName>
    <description>An API for SCP over SSH.  (SCP is the Secure Copy Protocol.)   It is for transferring files or directory trees to or from remote servers.  SCP is a simpler protocol than SFTP, and thus the functionality is more limited.  However, SCP does not require that an SSH server support the SFTP subsystem.  In cases where a server does not allow for SFTP, then SCP is a good choice for file transfer.</description>
    <methods>
        <method name="DownloadBinary" axId="115" outArgName="outBytes" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bytes</gType>
            <descrip>Downloads a binary file from the SSH server and returns the contents.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>outBytes</argName>
                    <cppType>CkByteData &amp;</cppType>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
            </args2>
        </method>
        <method name="DownloadBinaryEncoded" axId="113" ax="1" cpp="1" dn="1" events="1" status="1" outArgName="outStr">
            <gType>string</gType>
            <descrip>Downloads a file from the SSH server returns the contents in an encoded string (using an encoding such as base64).</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>encoding</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encoding</objcName>
                </arg>
                <arg>
                    <argName>outStr</argName>
                    <cppType>CkString &amp;</cppType>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="external">
                    <url>http://www.cknotes.com/chilkat-binary-encoding-list/</url>
                    <text>List of Supported Encodings (Base64, Hex, etc.)</text>
                </link>
                <link linkType="example">
                    <url>scp_binary_encoded.asp</url>
                    <text>SCP Download/Upload Binary Files as Encoded Strings</text>
                </link>
            </links2>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
        </method>
        <method name="DownloadFile" axId="102" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Downloads a file from the remote SSH server to the local filesystem.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>localPath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>localPath</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>scp_download_file.asp</url>
                    <text>SCP Download File</text>
                </link>
                <link linkType="example">
                    <url>scp_download_from_dir.asp</url>
                    <text>SCP Download from a Specific Directory</text>
                </link>
            </links2>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
                <arg name="localPath" type="string" objcName="localPath" />
            </args2>
        </method>
        <method name="DownloadString" axId="114" ax="1" cpp="1" dn="1" events="1" status="1" outArgName="outStr">
            <gType>string</gType>
            <descrip>Downloads a text file from the SSH server and returns the contents as a string.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>charset</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>charset</objcName>
                </arg>
                <arg>
                    <argName>outStr</argName>
                    <cppType>CkString &amp;</cppType>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>scp_download_to_string.asp</url>
                    <text>SCP Download Text File to String Variable</text>
                </link>
                <link linkType="external" lang="activex">
                    <url>http://www.chilkatforum.com/questions/9342/sql-server-methods-that-return-long-strings</url>
                    <text>Long Strings Returned by ActiveX Methods in SQL Server</text>
                </link>
            </links2>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
                <arg name="charset" type="string" objcName="charset" />
            </args2>
        </method>
        <method name="SyncTreeDownload" axId="106" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Downloads files from the SSH server to a local directory tree.  Synchronization modes include:&lt;p&gt;&lt;blockquote&gt;
mode=0: Download all files&lt;br&gt;
mode=1: Download all files that do not exist on the local filesystem.&lt;br&gt;
mode=2: Download newer or non-existant files.&lt;br&gt;
mode=3: Download only newer files.  If a file does not already exist on the local filesystem, it is not downloaded from the server.&lt;br&gt;
mode=5: Download only missing files or files with size differences.&lt;br&gt;
mode=6: Same as mode 5, but also download newer files.&lt;br&gt;
&lt;/blockquote&gt;
&lt;/p&gt;</descrip>
            <args>
                <arg>
                    <argName>remoteRoot</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remoteRoot</objcName>
                </arg>
                <arg>
                    <argName>localRoot</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>localRoot</objcName>
                </arg>
                <arg>
                    <argName>mode</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>mode</objcName>
                </arg>
                <arg>
                    <argName>bRecurse</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>bRecurse</objcName>
                </arg>
            </args>
            <iversion>9.5.0.51</iversion>
            <links2>
                <link linkType="example">
                    <url>scp_sync_tree_download.asp</url>
                    <text>SCP Sync Tree Download</text>
                </link>
            </links2>
            <args2>
                <arg name="remoteRoot" type="string" objcName="remoteRoot" />
                <arg name="localRoot" type="string" objcName="localRoot" />
                <arg name="mode" type="int" objcName="mode" />
                <arg name="bRecurse" type="bool" objcName="bRecurse" />
            </args2>
        </method>
        <method name="SyncTreeUpload" axId="105" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>localBaseDir</argName>
                    <objcName>localBaseDir</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>remoteBaseDir</argName>
                    <objcName>remoteBaseDir</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>mode</argName>
                    <objcName>mode</objcName>
                </arg>
                <arg>
                    <argName>bRecurse</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>bRecurse</objcName>
                </arg>
            </args>
            <descrip>Uploads a directory tree from the local filesystem to the SSH server.  Synchronization modes include:&lt;p&gt;&lt;blockquote&gt;
mode=0: Upload all files&lt;br&gt;
mode=1: Upload all files that do not exist on the FTP server.&lt;br&gt;
mode=2: Upload newer or non-existant files.&lt;br&gt;
mode=3: Upload only newer files.  If a file does not already exist on the FTP server, it is not uploaded.&lt;br&gt;
mode=4: transfer missing files or files with size differences.&lt;br&gt;
mode=5: same as mode 4, but also newer files.
&lt;/blockquote&gt;&lt;/p&gt;</descrip>
            <iversion>9.5.0.51</iversion>
            <args2>
                <arg name="localBaseDir" type="string" objcName="localBaseDir" />
                <arg name="remoteBaseDir" type="string" objcName="remoteBaseDir" />
                <arg name="mode" type="int" objcName="mode" />
                <arg name="bRecurse" type="bool" objcName="bRecurse" />
            </args2>
        </method>
        <method name="UploadBinary" axId="116" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Uploads binary data to a file on the SSH server.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>binData</argName>
                    <cppType>CkByteData &amp;</cppType>
                    <dnType>bytes</dnType>
                    <axType>bytes</axType>
                    <objcName>binData</objcName>
                </arg>
            </args>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
                <arg name="binData" type="bytes" objcName="binData" />
            </args2>
        </method>
        <method name="UploadBinaryEncoded" axId="112" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Uploads the binary data to a file on the remote SSH server.  The binary data is passed in encoded string representation (such as base64, or hex).</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>encodedData</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encodedData</objcName>
                </arg>
                <arg>
                    <argName>encoding</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encoding</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="external">
                    <url>http://www.cknotes.com/chilkat-binary-encoding-list/</url>
                    <text>List of Supported Encodings (Base64, Hex, etc.)</text>
                </link>
                <link linkType="example">
                    <url>scp_binary_encoded.asp</url>
                    <text>SCP Download/Upload Binary Files as Encoded Strings</text>
                </link>
            </links2>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
                <arg name="encodedData" type="string" objcName="encodedData" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
        </method>
        <method name="UploadFile" axId="101" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Uploads a file from the local filesystem to the remote SSH server.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>localPath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>localPath</objcName>
                </arg>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>scp_upload_file.asp</url>
                    <text>SCP Upload File</text>
                </link>
                <link linkType="example">
                    <url>scp_upload_to_dir.asp</url>
                    <text>SCP Upload to a Specific Remote Directory</text>
                </link>
            </links2>
            <args2>
                <arg name="localPath" type="string" objcName="localPath" />
                <arg name="remotePath" type="string" objcName="remotePath" />
            </args2>
        </method>
        <method name="UploadString" ax="1" cpp="1" dn="1" events="1" status="1" axId="111">
            <gType>bool</gType>
            <descrip>Uploads the contents of a string to a file on the remote SSH server.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>remotePath</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>remotePath</objcName>
                </arg>
                <arg>
                    <argName>textData</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>textData</objcName>
                </arg>
                <arg>
                    <argName>charset</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>charset</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>scp_upload_string.asp</url>
                    <text>SCP Upload Contents of String to Remote File</text>
                </link>
            </links2>
            <args2>
                <arg name="remotePath" type="string" objcName="remotePath" />
                <arg name="textData" type="string" objcName="textData" />
                <arg name="charset" type="string" objcName="charset" />
            </args2>
        </method>
        <method name="UseSsh" axId="100" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Uses the SSH connection of ARG1 for the SCP transfers.  All of the connection and socket related properties, proxy properites, timeout properties, session log, etc. set on the SSH object apply to the SCP methods (because internally it is the SSH object that is used to do the work of the file transfers).
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; There is no UnlockComponent method in the SCP class because it is the SSH object that must be unlocked.  When the SSH object is not unlocked, this method will return _FALSE_ to indicate failure.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>sshConnection</argName>
                    <cppType>CkSsh &amp;</cppType>
                    <dnType>Ssh</dnType>
                    <axType>Ssh</axType>
                    <objcName>sshConnection</objcName>
                </arg>
            </args>
            <args2>
                <arg name="sshConnection" type="Ssh" objcName="sshConnection" />
            </args2>
        </method>
    </methods>
    <properties>
        <property name="AbortCurrent" read="1" write="1" ax="1" cpp="1" dn="1" axId="118">
            <gType>bool</gType>
            <descrip>When set to _TRUE_, causes the currently running method to abort.  Methods that always finish quickly (i.e.have no length file operations or network communications) are not affected.  If no method is running, then this property is automatically reset to _FALSE_ when the next method is called.  When the abort occurs, this property is reset to _FALSE_.  Both synchronous and asynchronous method calls can be aborted.  (A synchronous method call could be aborted by setting this property from a separate thread.)</descrip>
            <iversion>9.5.0.58</iversion>
            <args2 />
        </property>
        <property name="HeartbeatMs" axId="103" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>This is the number of milliseconds between each AbortCheck event callback.  The AbortCheck callback allows an application to abort any SSH operation prior to completion.  If HeartbeatMs is 0 (the default), no AbortCheck event callbacks will fire.</descrip>
            <links>
                <link>
                    <text>HeartbeatMs and the AbortCheck Event</text>
                    <url_cs>http://www.cknotes.com/?p=149</url_cs>
                    <url_vb.net>http://www.cknotes.com/?p=149</url_vb.net>
                </link>
            </links>
            <links2>
                <link linkType="external" lang="csharp">
                    <text>HeartbeatMs and the AbortCheck Event</text>
                    <url>http://www.cknotes.com/?p=149</url>
                </link>
            </links2>
            <args2 />
        </property>
        <property name="PercentDoneScale" axId="107" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>This property is only valid in programming environment and languages that allow for event callbacks.
&lt;p&gt;
Sets the value to be defined as 100% complete for the purpose of PercentDone event callbacks.  The defaut value of 100 means that at most 100 event PercentDone callbacks will occur in a method that (1) is event enabled and (2) is such that it is possible to measure progress as a percentage completed.   This property may be set to larger numbers to get more fine-grained PercentDone callbacks.  For example, setting this property equal to 1000 will provide callbacks with .1 percent granularity.  For example, a value of 453 would indicate 45.3% competed.  This property is clamped to a minimum value of 10, and a maximum value of 100000.</descrip>
            <iversion>9.5.0.51</iversion>
            <args2 />
        </property>
        <property name="SyncMustMatch" axId="108" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Can contain a wildcarded list of filename patterns separated by semicolons.  For example, "*.xml; *.txt; *.csv".  If set, the SyncTreeUpload and SyncTreeDownload methods will only  transfer files having a filename that matches any one of these patterns.</descrip>
            <iversion>9.5.0.51</iversion>
            <links2>
                <link linkType="example">
                    <url>scp_sync_tree_download.asp</url>
                    <text>SCP Sync Tree Download</text>
                </link>
                <link linkType="example">
                    <url>scp_sync_tree_upload.asp</url>
                    <text>SCP Sync Tree Upload</text>
                </link>
                <link linkType="example">
                    <url>scp_download_matching.asp</url>
                    <text>SCP Download Files Matching a Pattern, such as *.txt</text>
                </link>
            </links2>
            <args2 />
        </property>
        <property name="SyncMustMatchDir" read="1" write="1" ax="1" cpp="1" dn="1" axId="119">
            <gType>string</gType>
            <descrip>Can contain a wildcarded list of directory name patterns separated by semicolons.  For example, "a*; b*; c*".  If set, the SyncTreeUpload and SyncTreeDownload methods will only  traverse into a directory that matches any one of these patterns.</descrip>
            <iversion>9.5.0.58</iversion>
            <args2 />
        </property>
        <property name="SyncMustNotMatch" axId="109" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Can contain a wildcarded list of filename patterns separated by semicolons.  For example, "*.xml; *.txt; *.csv".  If set, the SyncTreeUpload  and SyncTreeDownload methods will not  transfer files having a filename that matches any one of these patterns.</descrip>
            <iversion>9.5.0.51</iversion>
            <links2>
                <link linkType="example">
                    <url>scp_sync_tree_download.asp</url>
                    <text>SCP Sync Tree Download</text>
                </link>
                <link linkType="example">
                    <url>scp_sync_tree_upload.asp</url>
                    <text>SCP Sync Tree Upload</text>
                </link>
            </links2>
            <args2 />
        </property>
        <property name="SyncMustNotMatchDir" read="1" write="1" ax="1" cpp="1" dn="1" axId="120">
            <gType>string</gType>
            <descrip>Can contain a wildcarded list of directory name patterns separated by semicolons.  For example, "a*; b*; c*".  If set, the SyncTreeUpload  and SyncTreeDownload methods will not  traverse into a directory  that matches any one of these patterns.</descrip>
            <iversion>9.5.0.58</iversion>
            <args2 />
        </property>
        <property name="SyncedFiles" read="1" write="1" ax="1" cpp="1" dn="1" axId="110">
            <gType>string</gType>
            <descrip>The paths of the files uploaded or downloaded in the last call to SyncUploadTree or SyncDownloadTree.  The paths are listed one per line.  In both cases (for upload and download) each line contains the full local file path (not the remote path).</descrip>
            <iversion>9.5.0.51</iversion>
            <links2>
                <link linkType="example">
                    <url>scp_sync_tree_download.asp</url>
                    <text>SCP Sync Tree Download</text>
                </link>
                <link linkType="example">
                    <url>scp_sync_tree_upload.asp</url>
                    <text>SCP Sync Tree Upload</text>
                </link>
            </links2>
            <args2 />
        </property>
    </properties>
    <events>
        <standard name="AbortCheck" />
        <standard name="PercentDone" />
        <standard name="ProgressInfo" />
        <standard name="TaskCompleted" />
    </events>
    <clsid>73E12250-549F-4799-9D6A-0F23C279BD6E</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidEvents>5163038A-3AD2-4252-9700-58B684601590</uuidEvents>
    <uuidMidl>416E33A0-BD55-4CD8-936B-7EEAF8850D0F</uuidMidl>
    <nextAxId>121</nextAxId>
</class>
