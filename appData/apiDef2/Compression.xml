<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="816133750" sourceXmlPath="C:/ck2000/appData/apiDef2/Compression.xml" license="Zip" hasEvents="1" baseProgress="1">
    <axName>ChilkatCompression</axName>
    <dnName>Compression</dnName>
    <cppName>CkCompression</cppName>
    <properties>
        <property name="Algorithm" axId="103" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The compression algorithm to be used.  Should be set to either "ppmd", "deflate", "zlib", "bzip2", or "lzw".
&lt;p&gt;
Note: The PPMD compression algorithm is only available for 32-bit  builds.  It is not available for 64-bit implementations.  Also, this PPMD implementation is the "J" variant.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="Charset" axId="100">
            <gType>string</gType>
            <descrip>Only applies to methods that compress or decompress strings.  This specifies the character encoding that the string should be converted to before compression.  Many programming languages use Unicode (2 bytes per char) for representing characters.  This property allows for the string to be converted to a 1-byte per char encoding prior to compression.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="EncodingMode" axId="101">
            <gType>string</gType>
            <descrip>Controls the encoding expected by methods ending in "ENC", such as CompressBytesENC.   Valid values are "base64", "hex", "url", and "quoted-printable". Compression methods ending in ENC return the binary compressed data as an encoded string using this encoding.  Decompress methods expect the input string to be this encoding.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="HeartbeatMs" axId="102">
            <gType>int</gType>
            <descrip>The number of milliseconds between each AbortCheck event callback.  The AbortCheck callback allows an application to abort any method call prior to completion.  If HeartbeatMs is 0 (the default), no AbortCheck event callbacks will fire.</descrip>
            <links2 />
            <args2 />
        </property>
    </properties>
    <methods>
        <method name="BeginCompressBytes" axId="104" outArgName="outData" ax="1" cpp="1" dn="1" events="1">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Large amounts of binary byte data may be compressed in chunks by first calling BeginCompressBytes, followed by 0 or more calls to MoreCompressedBytes, and ending with a final call to EndCompressBytes.  Each call returns 0 or more bytes of compressed data which may be output to a compressed data stream (such as a file, socket, etc.).</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_large_binary_file_in_blocks.asp</url>
                    <text>Compress Large Binary File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginCompressBytesENC" axId="105" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Large amounts of binary byte data may be compressed in chunks by first calling BeginCompressBytesENC, followed by 0 or more calls to MoreCompressedBytesENC, and ending with a final call to EndCompressBytesENC.  Each call returns 0 or more characters of compressed data (encoded as a string according to the EncodingMode property setting) which may be output to a compressed data stream (such as a file, socket, etc.).</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginCompressString" axId="106" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Large amounts of string data may be compressed in chunks by first calling BeginCompressString, followed by 0 or more calls to MoreCompressedString, and ending with a final call to EndCompressString.  Each call returns 0 or more bytes of compressed data which may be output to a compressed data stream (such as a file, socket, etc.).</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_text_feed_to_binary.asp</url>
                    <text>Compress Text Feed to Binary</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginCompressStringENC" axId="107" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Large amounts of string data may be compressed in chunks by first calling BeginCompressStringENC, followed by 0 or more calls to MoreCompressedStringENC, and ending with a final call to EndCompressStringENC.  Each call returns 0 or more characters of compressed data (encoded as a string according to the EncodingMode property setting) which may be output to a compressed data stream (such as a file, socket, etc.).</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_text_feed_to_base64.asp</url>
                    <text>Compress String Feed to Base64</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginDecompressBytes" axId="108" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>A compressed data stream may be decompressed in chunks by first calling BeginDecompressBytes, followed by 0 or more calls to MoreDecompressedBytes, and ending with a final call to EndDecompressBytes.  Each call returns 0 or more bytes of decompressed data.</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>decompress_large_binary_file_in_blocks.asp</url>
                    <text>Decompress Large Binary File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginDecompressBytesENC" axId="109" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>The input to this method is an encoded string containing compressed data. The EncodingMode property should be set prior to calling this method.  The input string is decoded according to the EncodingMode (hex, base64, etc.) and then decompressed.
&lt;p&gt;
A compressed data stream may be decompressed in chunks by first calling BeginDecompressBytesENC, followed by 0 or more calls to MoreDecompressedBytesENC, and ending with a final call to EndDecompressBytesENC.  Each call returns 0 or more bytes of decompressed data.</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginDecompressString" axId="110" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>A compressed data stream may be decompressed in chunks by first calling BeginDecompressString, followed by 0 or more calls to MoreDecompressedString, and ending with a final call to EndDecompressString.  Each call returns 0 or more characters of decompressed text.</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>decompress_large_text_file_in_blocks.asp</url>
                    <text>Decompress Large Text File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="BeginDecompressStringENC" axId="111" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>The input to this method is an encoded string containing compressed data. The EncodingMode property should be set prior to calling this method.  The input string is decoded according to the EncodingMode (hex, base64, etc.) and then decompressed.
&lt;p&gt;
A compressed data stream may be decompressed in chunks by first calling BeginDecompressStringENC, followed by 0 or more calls to MoreDecompressedStringENC, and ending with a final call to EndDecompressStringENC.  Each call returns 0 or more characters of decompressed text.</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="CompressBytes" axId="112" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Compresses byte data.</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_bytes.asp</url>
                    <text>Compress Bytes</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="CompressBytesENC" axId="113" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Compresses bytes and returns the compressed data encoded to a string.  The encoding (hex, base64, etc.) is determined by the EncodingMode property setting.</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_bytes_to_base64.asp</url>
                    <text>Compress Bytes to Base64 (or any other encoding)</text>
                </link>
            </links2>
        </method>
        <method name="CompressFile" axId="114" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>srcPath</argName>
                    <objcName>srcPath</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>destPath</argName>
                    <objcName>destPath</objcName>
                </arg>
            </args>
            <descrip>Performs file-to-file compression.  Files of any size may be compressed because the file is compressed internally in streaming mode.</descrip>
            <links2>
                <link linkType="example">
                    <url>deflate_file.asp</url>
                    <text>Compress and Decompress a File</text>
                </link>
            </links2>
            <args2>
                <arg name="srcPath" type="string" objcName="srcPath" />
                <arg name="destPath" type="string" objcName="destPath" />
            </args2>
        </method>
        <method name="CompressStream" ax="1" cpp="1" dn="1" events="1" status="1" axId="139">
            <gType>bool</gType>
            <descrip>Compresses a stream.  Internally, the ARG1's source is read, compressed, and the compressed data written to the ARG1's sink.  It does this in streaming fashion.  Extremely large or even infinite streams can be compressed with stable ungrowing memory usage.</descrip>
            <args>
                <arg>
                    <argName>strm</argName>
                    <cppType>CkStream &amp;</cppType>
                    <dnType>Stream</dnType>
                    <axType>Stream</axType>
                    <objcName>strm</objcName>
                </arg>
            </args>
            <iversion>9.5.0.56</iversion>
            <links2>
                <link linkType="example">
                    <url>stream_compression.asp</url>
                    <text>Streaming Compression</text>
                </link>
            </links2>
            <args2>
                <arg name="strm" type="Stream" objcName="strm" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="CompressString" axId="115" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Compresses a string.</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_decompress_string.asp</url>
                    <text>Compress and Decompress a String</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="CompressStringENC" axId="116" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Compresses a string and returns the compressed data encoded to a string.  The output encoding (hex, base64, etc.) is determined by the EncodingMode property setting.</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_decompress_string.asp</url>
                    <text>Compress and Decompress a String</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="DecompressBytes" axId="117" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>The opposite of CompressBytes.</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>decompress_bytes.asp</url>
                    <text>Decompress Bytes</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="DecompressBytesENC" axId="118" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>encodedCompressedData</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>The opposite of CompressBytesENC.  ARG1 contains the compressed data as an encoded string (hex, base64, etc) as specified by the EncodingMode property setting.</descrip>
            <args2>
                <arg name="encodedCompressedData" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_bytes_to_base64.asp</url>
                    <text>Compress Bytes to Base64 (or any other encoding)</text>
                </link>
            </links2>
        </method>
        <method name="DecompressFile" axId="119" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>srcPath</argName>
                    <objcName>srcPath</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>destPath</argName>
                    <objcName>destPath</objcName>
                </arg>
            </args>
            <descrip>Performs file-to-file decompression (the opposite of CompressFile).  Internally the file is decompressed in streaming mode which allows files of any size to be decompressed.</descrip>
            <links2>
                <link linkType="example">
                    <url>deflate_file.asp</url>
                    <text>Compress and Decompress a File</text>
                </link>
            </links2>
            <args2>
                <arg name="srcPath" type="string" objcName="srcPath" />
                <arg name="destPath" type="string" objcName="destPath" />
            </args2>
        </method>
        <method name="DecompressStream" ax="1" cpp="1" dn="1" events="1" status="1" axId="140">
            <gType>bool</gType>
            <descrip>Decompresses a stream.  Internally, the ARG1's source is read, decompressed, and the decompressed data written to the ARG1's sink.  It does this in streaming fashion.  Extremely large or even infinite streams can be decompressed with stable ungrowing memory usage.</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>strm</argName>
                    <cppType>CkStream &amp;</cppType>
                    <dnType>Stream</dnType>
                    <axType>Stream</axType>
                    <objcName>strm</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>stream_compression.asp</url>
                    <text>Streaming Compression</text>
                </link>
            </links2>
            <args2>
                <arg name="strm" type="Stream" objcName="strm" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="DecompressString" axId="120" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Takes compressed bytes, decompresses, and returns the resulting string.</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_decompress_string.asp</url>
                    <text>Compress and Decompress a String</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="DecompressStringENC" axId="121" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>encodedCompressedData</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>The opposite of CompressStringENC.  ARG1 contains the compressed data as an encoded string (hex, base64, etc) as specified by the EncodingMode property setting.</descrip>
            <args2>
                <arg name="encodedCompressedData" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_decompress_string.asp</url>
                    <text>Compress and Decompress a String</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndCompressBytes" axId="122" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Must be callled to finalize a compression stream.  Returns any remaining (buffered) compressed data.
&lt;p&gt;
(See BeginCompressBytes)</descrip>
            <args2 />
            <links2>
                <link linkType="example">
                    <url>compress_large_binary_file_in_blocks.asp</url>
                    <text>Compress Large Binary File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndCompressBytesENC" axId="123" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Must be callled to finalize a compression stream.  Returns any remaining (buffered) compressed data.
&lt;p&gt;
(See BeginCompressBytesENC)</descrip>
            <args2 />
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndCompressString" axId="124" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Must be callled to finalize a compression stream.  Returns any remaining (buffered) compressed data.
&lt;p&gt;
(See BeginCompressString)</descrip>
            <args2 />
            <links2>
                <link linkType="example">
                    <url>compress_text_feed_to_binary.asp</url>
                    <text>Compress Text Feed to Binary</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndCompressStringENC" axId="125" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Must be callled to finalize a compression stream.  Returns any remaining (buffered) compressed data.
&lt;p&gt;
(See BeginCompressStringENC)</descrip>
            <args2 />
            <links2>
                <link linkType="example">
                    <url>compress_text_feed_to_base64.asp</url>
                    <text>Compress String Feed to Base64</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndDecompressBytes" axId="126" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Called to finalize the decompression stream and return any remaining (buffered) decompressed data.
&lt;p&gt;
(See BeginDecompressBytes)</descrip>
            <args2 />
            <links2>
                <link linkType="example">
                    <url>decompress_large_binary_file_in_blocks.asp</url>
                    <text>Decompress Large Binary File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndDecompressBytesENC" axId="127" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>Called to finalize the decompression stream and return any remaining (buffered) decompressed data.
&lt;p&gt;
The input to this method is an encoded string containing compressed data. The EncodingMode property should be set prior to calling this method.  The input string is decoded according to the EncodingMode (hex, base64, etc.) and then decompressed.
&lt;p&gt;
(See BeginDecompressBytesENC)</descrip>
            <args2 />
            <links2 />
        </method>
        <method name="EndDecompressString" axId="128" outArgName="outStr" ax="1" cpp="1" dn="1" events="1">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Called to finalize the decompression stream and return any remaining (buffered) decompressed data.
&lt;p&gt;
(See BeginDecompressString)</descrip>
            <args2 />
            <links2>
                <link linkType="example">
                    <url>decompress_large_text_file_in_blocks.asp</url>
                    <text>Decompress Large Text File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="EndDecompressStringENC" axId="129" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Called to finalize the decompression stream and return any remaining (buffered) decompressed data.
&lt;p&gt;
The input to this method is an encoded string containing compressed data. The EncodingMode property should be set prior to calling this method.  The input string is decoded according to the EncodingMode (hex, base64, etc.) and then decompressed.
&lt;p&gt;
(See BeginDecompressStringENC)</descrip>
            <args2 />
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreCompressBytes" axId="130" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>(See BeginCompressBytes)</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_large_binary_file_in_blocks.asp</url>
                    <text>Compress Large Binary File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreCompressBytesENC" axId="131" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>(See BeginCompressBytesENC)</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreCompressString" axId="132" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>(See BeginCompressString)</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_text_feed_to_binary.asp</url>
                    <text>Compress Text Feed to Binary</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreCompressStringENC" axId="133" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>(See BeginCompressStringENC)</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>compress_text_feed_to_base64.asp</url>
                    <text>Compress String Feed to Base64</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreDecompressBytes" axId="134" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>(See BeginDecompressBytes)</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>decompress_large_binary_file_in_blocks.asp</url>
                    <text>Decompress Large Binary File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreDecompressBytesENC" axId="135" outArgName="outData">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outData</argName>
                    <objcName>outData</objcName>
                </arg>
            </args>
            <descrip>The input to this method is an encoded string containing compressed data. The EncodingMode property should be set prior to calling this method.  The input string is decoded according to the EncodingMode (hex, base64, etc.) and then decompressed.
&lt;p&gt;
(See BeginDecompressBytesENC)</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreDecompressString" axId="136" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>data</argName>
                    <objcName>bData</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>(See BeginDecompressString)</descrip>
            <args2>
                <arg name="data" type="bytes" objcName="bData" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>decompress_large_text_file_in_blocks.asp</url>
                    <text>Decompress Large Text File in Blocks</text>
                </link>
            </links2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="MoreDecompressStringENC" axId="137" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>The input to this method is an encoded string containing compressed data. The EncodingMode property should be set prior to calling this method.  The input string is decoded according to the EncodingMode (hex, base64, etc.) and then decompressed.
&lt;p&gt;
(See BeginDecompressStringENC)</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="UnlockComponent" axId="138">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>unlockCode</argName>
                    <objcName>unlockCode</objcName>
                </arg>
            </args>
            <descrip>Unlocks the component allowing for the full functionality to be used.  The component may be used fully-functional for the 1st 30-days after download by passing an arbitrary string to this method.  If for some reason you do not receive the full 30-day trial, send email to support@chilkatsoft.com for a temporary unlock code w/ an explicit expiration date.  Upon purchase, a purchased unlock code is provided which should replace the temporary/arbitrary string passed to this method.</descrip>
            <args2>
                <arg name="unlockCode" type="string" objcName="unlockCode" />
            </args2>
            <links2>
                <link linkType="external">
                    <text>Diagnosing UnlockComponent Problems</text>
                    <url>http://www.cknotes.com/?p=168</url>
                </link>
                <link linkType="external">
                    <text>UnlockComponent LastErrorText shows exact string passed to it.</text>
                    <url>http://www.cknotes.com/?p=315</url>
                </link>
                <link linkType="external">
                    <text>Verify UnlockComponent Success w/ Purchased Unlock Code</text>
                    <url>http://www.cknotes.com/?p=317</url>
                </link>
                <link linkType="external">
                    <text>LastErrorText Standard Information</text>
                    <url>http://www.cknotes.com/?p=316</url>
                </link>
            </links2>
        </method>
        <method name="CompressBd" axId="141" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="binData" type="BinData" objcName="binData" />
            </args2>
            <iversion>9.5.0.66</iversion>
            <links2>
                <link linkType="example">
                    <url>compress_decompress_base64.asp</url>
                    <text>Compress and Decompress Base64</text>
                </link>
                <link linkType="example">
                    <url>compress_decompress_hex.asp</url>
                    <text>Compress and Decompress Hex String</text>
                </link>
            </links2>
            <descrip>Compresses the data contained in a BinData object.</descrip>
        </method>
        <method name="DecompressBd" axId="142" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Decompresses the data contained in a BinData object.</descrip>
            <args2>
                <arg name="binData" type="BinData" objcName="binData" />
            </args2>
            <iversion>9.5.0.66</iversion>
            <links2>
                <link linkType="example">
                    <url>compress_decompress_base64.asp</url>
                    <text>Compress and Decompress Base64</text>
                </link>
                <link linkType="example">
                    <url>compress_decompress_hex.asp</url>
                    <text>Compress and Decompress Hex String</text>
                </link>
            </links2>
        </method>
    </methods>
    <genericName>Compression</genericName>
    <events>
        <standard name="AbortCheck" />
        <standard name="PercentDone" />
        <standard name="ProgressInfo" />
        <standard name="TaskCompleted" />
    </events>
    <description>Data compression component implementing the PPMD, Bzip2, Deflate, and LZW compression algorithms.  .NET, ActiveX, and C++ implementations provide progress monitoring and abort capabilities.  Provides a unified API for all supported compression algorithms.</description>
    <clsid>D6CEA276-E79C-4026-BD46-933E3C8F88D8</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidEvents>3CAEF134-ED93-4EDA-8556-B6A44A102DDC</uuidEvents>
    <uuidMidl>73B5832B-AACE-4975-9238-09579CB89232</uuidMidl>
    <nextAxId>143</nextAxId>
</class>
