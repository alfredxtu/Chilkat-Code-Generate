<?xml version="1.0" encoding="utf-8" ?>
<class sourceXmlPath="C:/ck2000/appData/apiDef2/CreateCS.xml" license="Free" windowsOnly="1" deprecated="1">
    <axName>ChilkatCreateCS</axName>
    <dnName>CreateCS</dnName>
    <cppName>CkCreateCS</cppName>
    <properties>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ReadOnly" axId="100">
            <gType>bool</gType>
            <descrip>Determines whether certificate stores are opened with read-only or read/write permissions. Only applies to methods such as OpenCurrentUserStore, where the a readOnly parameter is not present.</descrip>
            <links2 />
            <args2 />
        </property>
    </properties>
    <methods>
        <method name="CreateFileStore" axId="101" ax="1" cpp="1" dn="1" noObjC="1" windowsOnly="1">
            <gType>CertStore</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>path</argName>
                </arg>
            </args>
            <descrip>Creates a file-based certificate store. If 'filename' already exists, the method will fail.</descrip>
            <args2>
                <arg name="path" type="string" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" windowsOnly="1" name="CreateMemoryStore" axId="102">
            <gType>CertStore</gType>
            <args />
            <descrip>Creates a temporary certificate store in memory that is initially empty.</descrip>
            <args2 />
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" windowsOnly="1" name="CreateRegistryStore" axId="103">
            <gType>CertStore</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>regRoot</argName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>regPath</argName>
                </arg>
            </args>
            <descrip>Creates a registry-based certificate store. The 'hiveName' can either be "CurrentUser" or "LocalMachine". The 'regPath' argument should be specified without a leading slash, such as "Software/Chilkat/MyCertStore".</descrip>
            <args2>
                <arg name="regRoot" type="string" />
                <arg name="regPath" type="string" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" windowsOnly="1" name="OpenChilkatStore" axId="104">
            <gType>CertStore</gType>
            <args />
            <descrip>Opens the certificate store used by Chilkat Mail and returns the object representing that store.</descrip>
            <args2 />
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" windowsOnly="1" name="OpenCurrentUserStore" axId="105">
            <gType>CertStore</gType>
            <args />
            <descrip>Opens the local system's Current User Certificate Store and returns the object representing that store.</descrip>
            <args2 />
            <links2 />
        </method>
        <method name="OpenFileStore" axId="106" ax="1" cpp="1" dn="1" windowsOnly="1">
            <gType>CertStore</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>path</argName>
                </arg>
            </args>
            <descrip>Opens an existing file certificate store. To open it read-only, readOnly should be non-zero.</descrip>
            <args2>
                <arg name="path" type="string" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" windowsOnly="1" name="OpenLocalSystemStore" axId="107">
            <gType>CertStore</gType>
            <args />
            <descrip>Opens the local system's Local Machine Certificate Store and returns the object representing that store.</descrip>
            <args2 />
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" windowsOnly="1" name="OpenOutlookStore" axId="108">
            <gType>CertStore</gType>
            <args />
            <descrip>Opens the certificate store used by Microsoft Outlook (and Office) and returns the object representing that store.</descrip>
            <args2 />
            <links2 />
        </method>
        <method name="OpenRegistryStore" axId="109" ax="1" cpp="1" dn="1" windowsOnly="1">
            <gType>CertStore</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>regRoot</argName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>regPath</argName>
                </arg>
            </args>
            <descrip>Opens an existing registry-based certificate store. 'hiveName' should be either "CurrentUser" or "LocalMachine". The 'regPath' argument should be specified without a leading slash, such as "Software/Chilkat/MyCertStore".</descrip>
            <args2>
                <arg name="regRoot" type="string" />
                <arg name="regPath" type="string" />
            </args2>
            <links2 />
        </method>
    </methods>
    <genericName>CreateCS</genericName>
    <description>Factory class for creating certificate store objects.&lt;p&gt;&lt;b&gt;This class is specific to the Windows operating system, and therefore is only available on Windows systems.&lt;/b&gt;</description>
    <clsid>E98C2D0C-6053-4568-9BCE-D6350C39CD93</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>08114E7A-8556-40E9-8CE1-0BE2E7A041A8</uuidMidl>
    <nextAxId>110</nextAxId>
</class>
