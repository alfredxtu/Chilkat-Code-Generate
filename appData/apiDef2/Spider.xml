<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="380020424" license="Free" baseProgress="1" hasEvents="1" sourceXmlPath="C:/ck2000/appData/apiDef2/Spider.xml">
    <axName>ChilkatSpider</axName>
    <dnName>Spider</dnName>
    <cppName>CkSpider</cppName>
    <properties>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="AvoidHttps" axId="100">
            <gType>bool</gType>
            <descrip>If set the 1 (true) the spider will avoid all HTTPS URLs.  The default is 0 (false).</descrip>
        </property>
        <property name="CacheDir" axId="101" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Specifies a cache directory to use for spidering.  If either of the FetchFromCache or UpdateCache properties are true, this is the location of the cache to be used.  Note: the Internet Explorer, Netscape, and FireFox caches are completely separate from the Chilkat Spider cache directory.  You should specify a new and empty directory.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_cache.asp</url>
                    <text>Caching Web Pages to the Filesystem</text>
                </link>
            </links2>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ChopAtQuery" axId="102">
            <gType>bool</gType>
            <descrip>If equal to 1 (true), then the query portion of all URLs are automatically removed when adding to the unspidered list.  The default value is 0 (false).</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ConnectTimeout" axId="103">
            <gType>int</gType>
            <descrip>The maximum number of seconds to wait while connecting to an HTTP server.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="Domain" axId="104">
            <gType>string</gType>
            <descrip>The domain name that is being spidered.  This is the domain previously set in the Initialize method.</descrip>
        </property>
        <property name="FetchFromCache" axId="105" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>If equal to 1 (true) then pages are fetched from cache when possible.  If 0, the cache is ignored.  The default value is 1.  Regardless, if no CacheDir is set then the cache is not used.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_cache.asp</url>
                    <text>Caching Web Pages to the Filesystem</text>
                </link>
            </links2>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="HeartbeatMs" axId="106">
            <gType>int</gType>
            <descrip>The number of milliseconds between each AbortCheck event callback.  The AbortCheck callback allows an application to abort any method call prior to completion.  If HeartbeatMs is 0 (the default), no AbortCheck event callbacks will fire.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="LastFromCache" axId="107">
            <gType>bool</gType>
            <descrip>Equal to 1 if the last page spidered was fetched from the cache.  Otherwise equal to 0.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="LastHtml" axId="108">
            <gType>string</gType>
            <descrip>The HTML text of the last paged fetched by the spider.</descrip>
        </property>
        <property name="LastHtmlDescription" axId="109" read="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The HTML META description from the last page fetched by the spider.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_parseHtml.asp</url>
                    <text>Extract HTML Title, Description, Keywords</text>
                </link>
            </links2>
        </property>
        <property name="LastHtmlKeywords" axId="110" read="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The HTML META keywords from the last page fetched by the spider.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_parseHtml.asp</url>
                    <text>Extract HTML Title, Description, Keywords</text>
                </link>
            </links2>
        </property>
        <property name="LastHtmlTitle" axId="111" read="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The HTML title from the last page fetched by the spider.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_parseHtml.asp</url>
                    <text>Extract HTML Title, Description, Keywords</text>
                </link>
            </links2>
        </property>
        <property cpp="1" dn="0" ax="1" read="1" write="0" name="LastModDate" axId="112" deprecated="1" noxojo="1">
            <gType>date</gType>
            <descrip>The last-modification date of the last URL spidered.</descrip>
        </property>
        <property cpp="1" dn="1" ax="0" read="1" write="0" name="LastModDateStr">
            <gType>string</gType>
            <descrip>The last modification date/time from the last page fetched by the spider.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="LastUrl" axId="113">
            <gType>string</gType>
            <descrip>The URL of the last page spidered.</descrip>
        </property>
        <property name="MaxResponseSize" axId="114" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>The maximum HTTP response size allowed.  The spider will automatically fail any pages larger than this size.  The default value is 250,000 bytes.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_maxResponseSize.asp</url>
                    <text>Setting a Maximum Response Size</text>
                </link>
            </links2>
        </property>
        <property name="MaxUrlLen" axId="115" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>The maximum URL length allowed.  URLs longer than this are not added to the unspidered list.  The default value is 200.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_maxUrlLen.asp</url>
                    <text>Setting a Maximum URL Length</text>
                </link>
            </links2>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumAvoidPatterns" axId="116">
            <gType>int</gType>
            <descrip>The number of avoid patterns previously set by calling AddAvoidPattern.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumFailed" axId="117">
            <gType>int</gType>
            <descrip>The number of URLs in the component's failed URL list.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumOutboundLinks" axId="118">
            <gType>int</gType>
            <descrip>The number of URLs in the component's outbound links URL list.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumSpidered" axId="119">
            <gType>int</gType>
            <descrip>The number of URLs in the component's already-spidered URL list.</descrip>
        </property>
        <property name="NumUnspidered" axId="120" read="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>The number of URLs in the component's unspidered URL list.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_begin.asp</url>
                    <text>Getting Started Example</text>
                </link>
            </links2>
        </property>
        <property name="PreferIpv6" read="1" write="1" ax="1" cpp="1" dn="1" axId="152">
            <gType>bool</gType>
            <descrip>If _TRUE_, then use IPv6 over IPv4 when both are supported for a particular domain.   The default value of this property is _FALSE_, which will choose IPv4 over IPv6.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ProxyDomain" axId="121">
            <gType>string</gType>
            <descrip>The domain name of a proxy host if an HTTP proxy is used.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ProxyLogin" axId="122">
            <gType>string</gType>
            <descrip>If an HTTP proxy is used and it requires authentication, this property specifies the HTTP proxy login.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ProxyPassword" axId="123">
            <gType>string</gType>
            <descrip>If an HTTP proxy is used and it requires authentication, this property specifies the HTTP proxy password.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ProxyPort" axId="124">
            <gType>int</gType>
            <descrip>The port number of a proxy server if an HTTP proxy is used.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ReadTimeout" axId="125">
            <gType>int</gType>
            <descrip>The maximum number of seconds to wait when reading from an HTTP server.</descrip>
        </property>
        <property name="UpdateCache" axId="126" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>If equal to 1 (true) then pages saved to the cache.  If 0, the cache is ignored.  The default value is 1.  Regardless, if no CacheDir is set then the cache is not used.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_cache.asp</url>
                    <text>Caching Web Pages to the Filesystem</text>
                </link>
            </links2>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="UserAgent" axId="127">
            <gType>string</gType>
            <descrip>The value of the HTTP user-agent header field to be sent with HTTP requests.   The default value is "Chilkat/1.0.0 (+http://www.chilkatsoft.com/ChilkatHttpUA.asp)"</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="WindDownCount" axId="128">
            <gType>int</gType>
            <descrip>The "wind-down" phase begins when this number of URLs has been spidered.  When in the wind-down phase, no new URLs are added to the unspidered list.  The default value is 0 which means that there is NO wind-down phase.</descrip>
        </property>
        <property name="AbortCurrent" read="1" write="1" ax="1" cpp="1" dn="1" axId="153">
            <gType>bool</gType>
            <descrip>When set to _TRUE_, causes the currently running method to abort.  Methods that always finish quickly (i.e.have no length file operations or network communications) are not affected.  If no method is running, then this property is automatically reset to _FALSE_ when the next method is called.  When the abort occurs, this property is reset to _FALSE_.  Both synchronous and asynchronous method calls can be aborted.  (A synchronous method call could be aborted by setting this property from a separate thread.)</descrip>
            <iversion>9.5.0.58</iversion>
        </property>
    </properties>
    <methods>
        <method name="AddAvoidOutboundLinkPattern" axId="129" ax="1" cpp="1" dn="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>pattern</argName>
                    <objcName>pattern</objcName>
                </arg>
            </args>
            <descrip>Adds a wildcarded pattern to prevent collecting matching outbound link URLs.  For example, if "*google*" is added, then any outbound links containing the word "google" will be ignored.  The "*" character matches zero or more of any character.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_avoidOutboundPatterns.asp</url>
                    <text>Avoiding Outbound Links Matching Patterns</text>
                </link>
            </links2>
            <args2>
                <arg name="pattern" type="string" objcName="pattern" />
            </args2>
        </method>
        <method name="AddAvoidPattern" axId="130" ax="1" cpp="1" dn="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>pattern</argName>
                    <objcName>pattern</objcName>
                </arg>
            </args>
            <descrip>Adds a wildcarded pattern to prevent spidering matching URLs.  For example, if "*register*" is added, then any url containing the word "register" is not spidered.  The "*" character matches zero or more of any character.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_avoidPatterns.asp</url>
                    <text>Avoid URLs Matching Any of a Set of Patterns</text>
                </link>
            </links2>
            <args2>
                <arg name="pattern" type="string" objcName="pattern" />
            </args2>
        </method>
        <method name="AddMustMatchPattern" axId="131" ax="1" cpp="1" dn="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>pattern</argName>
                    <objcName>pattern</objcName>
                </arg>
            </args>
            <descrip>Adds a wildcarded pattern to limit spidering to only URLs that match the pattern.  For example, if "*/products/*" is added, then only URLs containing "/products/" are spidered.  This is helpful for only spidering a portion of a website. The "*" character matches zero or more of any character.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_mustMatchPatterns.asp</url>
                    <text>Must-Match Patterns</text>
                </link>
            </links2>
            <args2>
                <arg name="pattern" type="string" objcName="pattern" />
            </args2>
        </method>
        <method name="AddUnspidered" axId="132" ax="1" cpp="1" dn="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>url</argName>
                    <objcName>url</objcName>
                </arg>
            </args>
            <descrip>To begin spidering you must call this method one or more times to provide starting points.  It adds a single URL to the component's internal queue of URLs to be spidered.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_crawlWeb.asp</url>
                    <text>Crawling the Web</text>
                </link>
            </links2>
            <args2>
                <arg name="url" type="string" objcName="url" />
            </args2>
        </method>
        <method name="CanonicalizeUrl" axId="133" ax="1" cpp="1" dn="1" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>url</argName>
                    <objcName>url</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Canonicalizes a URL by doing the following:
&lt;ul&gt;
&lt;li&gt; Drops username/password if present.
&lt;li&gt;Drops fragment if present.
&lt;li&gt;Converts domain to lowercase.
&lt;li&gt;Removes port 80 or 443
&lt;li&gt;Remove default.asp, index.html, index.htm, default.html, index.htm, default.htm,
 index.php, index.asp, default.php, .cfm, .aspx, ,php3, .pl, .cgi, .txt, .shtml, .phtml
&lt;li&gt; Remove www. from the domain if present.
&lt;/ul&gt;</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_canonicalizeUrl.asp</url>
                    <text>Canonicalize a URL</text>
                </link>
            </links2>
            <args2>
                <arg name="url" type="string" objcName="url" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="ClearFailedUrls" axId="134">
            <gType>void</gType>
            <args />
            <descrip>Clears the component's internal list of URLs that could not be downloaded.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="ClearOutboundLinks" axId="135">
            <gType>void</gType>
            <args />
            <descrip>Clears the component's internal list of outbound URLs that will automatically accumulate while spidering.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="ClearSpideredUrls" axId="136">
            <gType>void</gType>
            <args />
            <descrip>Clears the component's internal list of already-spidered URLs that will automatically accumulate while spidering.</descrip>
            <args2 />
        </method>
        <method name="CrawlNext" axId="137" ax="1" cpp="1" dn="1" events="1">
            <gType>bool</gType>
            <args />
            <descrip>Crawls the next URL in the internal list of unspidered URLs.  The URL is moved from the unspidered list to the spidered list.  Any new links within the same domain and not yet spidered are added to the unspidered list.  (providing that they do not match "avoid" patterns, etc.)  Any new outbound links are added to the outbound URL list.   

If successful, the HTML of the downloaded page is available in the LastHtml property.  If there are no more URLs left unspidered,  the method returns _FALSE_.  Information about the URL crawled is available in the properties LastUrl, LastFromCache, and LastModDate.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_crawlWeb.asp</url>
                    <text>Crawling the Web</text>
                </link>
                <link linkType="example">
                    <url>spider_begin.asp</url>
                    <text>Getting Started Example</text>
                </link>
            </links2>
            <args2 />
        </method>
        <method name="FetchRobotsText" axId="138" ax="1" cpp="1" dn="1" events="1" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the contents of the robots.txt file from the domain being crawled.  This spider component will not crawl URLs excluded by robots.txt.  If you believe the spider is not behaving correctly, please notify us at support@chilkatsoft.com and provide information detailing a case that allows us to reproduce the problem.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_robotsTxt.asp</url>
                    <text>Fetch robots.txt for a Site</text>
                </link>
            </links2>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="GetAvoidPattern" axId="139" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth avoid pattern previously added by calling AddAvoidPattern.  Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="GetBaseDomain" axId="140" ax="1" cpp="1" dn="1" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>domain</argName>
                    <objcName>domain</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>To be documented soon.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_getBaseDomain.asp</url>
                    <text>Convert a Domain Name into a "domain base"</text>
                </link>
            </links2>
            <args2>
                <arg name="domain" type="string" objcName="domain" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetFailedUrl" axId="141" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth URL in the failed URL list.  Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetOutboundLink" axId="142" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth URL in the outbound link URL list.  Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetSpideredUrl" axId="143" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth URL in the already-spidered URL list.  Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetUnspideredUrl" axId="144" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth URL in the unspidered URL list.  Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetUrlDomain" axId="145" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>url</argName>
                    <objcName>url</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the domain name part of a URL.  For example, if the URL is "http://www.chilkatsoft.com/test.asp", then "www.chilkatsoft.com" is returned.</descrip>
            <args2>
                <arg name="url" type="string" objcName="url" />
            </args2>
        </method>
        <method name="Initialize" axId="146" ax="1" cpp="1" dn="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>domain</argName>
                    <objcName>domain</objcName>
                </arg>
            </args>
            <descrip>Initializes the component to begin spidering a domain.  Calling Initialize clears any patterns added via the AddAvoidOutboundLinkPattern, AddAvoidPattern, and AddMustMatchPattern methods.  The domain name passed to this method is what is returned by the Domain property.   The spider only crawls URLs within the same domain.</descrip>
            <links2>
                <link linkType="example">
                    <url>spider_crawlWeb.asp</url>
                    <text>Crawling the Web</text>
                </link>
                <link linkType="example">
                    <url>spider_begin.asp</url>
                    <text>Getting Started Example</text>
                </link>
            </links2>
            <args2>
                <arg name="domain" type="string" objcName="domain" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="RecrawlLast" axId="147">
            <gType>bool</gType>
            <args />
            <descrip>Re-crawls the last URL spidered.  This helpful when cookies set in a previous page load cause the page to be loaded differently the next time.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="SkipUnspidered" axId="148">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Moves  a URL from the unspidered list to the spidered list.  This allows an application to skip a specific URL.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SleepMs" axId="149">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>numMilliseconds</argName>
                    <objcName>millisec</objcName>
                </arg>
            </args>
            <descrip>Suspends the execution of the current thread until the time-out interval elapses.</descrip>
            <args2>
                <arg name="numMilliseconds" type="int" objcName="millisec" />
            </args2>
        </method>
    </methods>
    <genericName>Spider</genericName>
    <events>
        <standard name="AbortCheck" />
        <standard name="ProgressInfo" />
        <standard name="TaskCompleted" />
    </events>
    <description>Chilkat Spider web crawler component.</description>
    <clsid>58BD963E-12A4-427E-9500-3A4FCEB545B2</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidEvents>713C1460-03E7-4CA9-A0F1-F1F5C3A391EB</uuidEvents>
    <uuidMidl>CB3E07ED-EBD4-4CEA-949F-53EDE8806F8F</uuidMidl>
    <nextAxId>154</nextAxId>
</class>
