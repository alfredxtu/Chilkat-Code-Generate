<?xml version="1.0" encoding="utf-8" ?>
<class license="Bundle" XojoModuleId="804014550" sourceXmlPath="C:/ck2000/appData/apiDef2/EmailBundle.xml">
    <nextAxId>117</nextAxId>
    <dnName>EmailBundle</dnName>
    <cppName>CkEmailBundle</cppName>
    <properties>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="MessageCount" axId="100">
            <gType>int</gType>
            <descrip>The number of emails in this bundle.</descrip>
        </property>
    </properties>
    <methods>
        <method name="AddEmail" axId="101" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>Email</axType>
                    <dnType>Email</dnType>
                    <cppType>CkEmail &amp;</cppType>
                    <argName>email</argName>
                    <objcName>email</objcName>
                </arg>
            </args>
            <descrip>Adds an email object to the bundle.</descrip>
            <args2>
                <arg name="email" type="Email" objcName="email" />
            </args2>
        </method>
        <method cpp="0" dn="0" ax="1" status="1" name="AddMimeBytes" axId="115">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <argName>mimeBytesOrText</argName>
                </arg>
            </args>
            <descrip>Adds an email to the bundle object.   The ARG1 is the email in MIME format.</descrip>
            <args2>
                <arg name="mimeBytesOrText" type="bytes" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="FindByHeader" axId="102">
            <gType>Email</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>headerFieldName</argName>
                    <objcName>name</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>headerFieldValue</argName>
                    <objcName>value</objcName>
                </arg>
            </args>
            <descrip>Returns the first email having a header field matching the ARG1 and ARG2 exactly (case sensitive).   If no matching email is found, returns _NULL_.</descrip>
            <args2>
                <arg name="headerFieldName" type="string" objcName="name" />
                <arg name="headerFieldValue" type="string" objcName="value" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetEmail" axId="103">
            <gType>Email</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth Email in the bundle.   The email returned is a copy of the email in the bundle.  Updating the email object returned by GetEmail has no effect on the email within the bundle.  To update/replace the email in the bundle, your program should call GetEmail to get a copy, make modifications, call RemoveEmailByIndex to remove the email (passing the same index used in the call to GetEmail), and then call AddEmail to insert the new/modified email into the bundle.
&lt;p&gt;
&lt;b&gt;IMPORTANT:&lt;/b&gt; This method does NOT communicate with any mail server to download the email.  It simply returns the Nth email object that exists within it's in-memory collection of email objects.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetUidls" axId="104">
            <gType>StringArray</gType>
            <args />
            <descrip>Returns a StringArray object containing UIDLs for all Email objects in the bundle.  UIDLs are only valid for emails retrieved from POP3 servers.  An email on a POP3 server has a "UIDL", an email on IMAP servers has a "UID".  If the email was retrieved from an IMAP server, the UID will be accessible via the "ckx-imap-uid" header field.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="GetXml" axId="105" outArgName="outXml">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outXml</argName>
                    <objcName>outXml</objcName>
                </arg>
            </args>
            <descrip>Converts the email bundle to an XML document in memory. Returns the XML document as a string.</descrip>
            <args2 />
        </method>
        <method name="LoadTaskResult" ax="1" cpp="1" dn="1" noWinRT="1" status="1" axId="116">
            <gType>bool</gType>
            <descrip>Loads the email bundle from a completed asynchronous task.</descrip>
            <args>
                <arg>
                    <argName>task</argName>
                    <cppType>CkTask &amp;</cppType>
                    <dnType>Task</dnType>
                    <axType>Task</axType>
                    <objcName>task</objcName>
                </arg>
            </args>
            <iversion>9.5.0.52</iversion>
            <args2>
                <arg name="task" type="Task" objcName="task" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="LoadXml" axId="106">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>filename</argName>
                    <objcName>path</objcName>
                </arg>
            </args>
            <descrip>Loads an email bundle from an XML file.</descrip>
            <args2>
                <arg name="filename" type="string" objcName="path" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="LoadXmlString" axId="107">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Loads an email bundle from an XML string.</descrip>
            <args2>
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="RemoveEmail" axId="108">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>Email</axType>
                    <dnType>Email</dnType>
                    <cppType>CkEmail &amp;</cppType>
                    <argName>email</argName>
                    <objcName>email</objcName>
                </arg>
            </args>
            <descrip>Removes an email from the bundle. This does not remove the email from the mail server.</descrip>
            <args2>
                <arg name="email" type="Email" objcName="email" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="RemoveEmailByIndex" axId="109">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Removes the Nth email in a bundle.  (Indexing begins at 0.)</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="SaveXml" axId="110">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>filename</argName>
                    <objcName>path</objcName>
                </arg>
            </args>
            <descrip>Converts each email to XML and persists the bundle to an XML file. The email bundle can			later be re-instantiated by calling MailMan.LoadXmlFile</descrip>
            <args2>
                <arg name="filename" type="string" objcName="path" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SortByDate" axId="111">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>bool</axType>
                    <dnType>bool</dnType>
                    <cppType>bool</cppType>
                    <argName>ascending</argName>
                    <objcName>ascending</objcName>
                </arg>
            </args>
            <descrip>Sorts emails in the bundle by date.</descrip>
            <args2>
                <arg name="ascending" type="bool" objcName="ascending" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SortByRecipient" axId="112">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>bool</axType>
                    <dnType>bool</dnType>
                    <cppType>bool</cppType>
                    <argName>ascending</argName>
                    <objcName>ascending</objcName>
                </arg>
            </args>
            <descrip>Sorts emails in the bundle by recipient.</descrip>
            <args2>
                <arg name="ascending" type="bool" objcName="ascending" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SortBySender" axId="113">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>bool</axType>
                    <dnType>bool</dnType>
                    <cppType>bool</cppType>
                    <argName>ascending</argName>
                    <objcName>ascending</objcName>
                </arg>
            </args>
            <descrip>Sorts emails in the bundle by sender.</descrip>
            <args2>
                <arg name="ascending" type="bool" objcName="ascending" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SortBySubject" axId="114">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>bool</axType>
                    <dnType>bool</dnType>
                    <cppType>bool</cppType>
                    <argName>ascending</argName>
                    <objcName>ascending</objcName>
                </arg>
            </args>
            <descrip>Sorts emails in the bundle by subject.</descrip>
            <args2>
                <arg name="ascending" type="bool" objcName="ascending" />
            </args2>
        </method>
    </methods>
    <genericName>EmailBundle</genericName>
    <description>Represents a collection of Email objects.</description>
    <clsid>DE9FC63E-73D2-4952-BB8B-9C37A7ADE1E6</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>A325D50D-6A7D-423F-9087-4242DC382181</uuidMidl>
    <axName>ChilkatEmailBundle</axName>
</class>
