<?xml version="1.0" encoding="utf-8" ?>
<class license="Free" noBaseEntries="1" sourceXmlPath="C:/ck2000/appData/apiDef2/BinData.xml">
    <genericName>BinData</genericName>
    <cppName>CkBinData</cppName>
    <dnName>BinData</dnName>
    <axName>ChilkatBinData</axName>
    <description>Container for binary data.  Provides methods for getting, setting, appending, etc. in binary and string encoded formats.</description>
    <methods>
        <method name="LoadBinary" axOnly="1" axId="100" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Loads binary data and replaces the current contents, if any.</descrip>
            <args>
                <arg>
                    <argName>data</argName>
                    <cppType>CkByteData &amp;</cppType>
                    <dnType>bytes</dnType>
                    <axType>bytes</axType>
                    <objcName>data</objcName>
                </arg>
            </args>
            <iversion>9.5.0.51</iversion>
            <args2>
                <arg name="data" type="bytes" objcName="data" />
            </args2>
            <links2 />
        </method>
        <method name="LoadEncoded" axOnly="1" axId="101" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Loads binary data from an encoded string, replacing the current contents, if any.  The ARG2 may be "Base64", "modBase64", "base64Url", "Base32", "Base58",  "QP" (for quoted-printable), "URL" (for url-encoding), "Hex", or any of the encodings found at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings List&lt;/a&gt;.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>encData</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encData</objcName>
                </arg>
                <arg>
                    <argName>encoding</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encoding</objcName>
                </arg>
            </args>
            <args2>
                <arg name="encData" type="string" objcName="encData" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <links2 />
        </method>
        <method name="GetBinary" axOnly="1" axId="102" outArgName="outBytes" ax="1" cpp="1" dn="1">
            <gType>bytes</gType>
            <descrip>Retrieves the binary data contained within the object.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>outBytes</argName>
                    <cppType>CkByteData &amp;</cppType>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <args2 />
            <links2 />
        </method>
        <method name="GetEncoded" axOnly="1" axId="103" outArgName="outStr" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Retrieves the binary data as an encoded string.   The ARG1  may be "Base64", "modBase64", "base64Url", "Base32", "Base58",  "QP" (for quoted-printable), "URL" (for url-encoding), "Hex", or any of the encodings found at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings List&lt;/a&gt;.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>encoding</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encoding</objcName>
                </arg>
                <arg>
                    <argName>outStr</argName>
                    <cppType>CkString &amp;</cppType>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <args2>
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>binData_encoding.asp</url>
                    <text>Demonstrate Binary Data Encoding Methods</text>
                </link>
                <link linkType="example">
                    <url>determine_file_type_from_content.asp</url>
                    <text>Determine File Type from Binary Content of File</text>
                </link>
            </links2>
        </method>
        <method name="AppendBinary" axOnly="1" axId="104" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Appends binary data to the current contents, if any.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>data</argName>
                    <cppType>CkByteData &amp;</cppType>
                    <dnType>bytes</dnType>
                    <axType>bytes</axType>
                    <objcName>data</objcName>
                </arg>
            </args>
            <args2>
                <arg name="data" type="bytes" objcName="data" />
            </args2>
            <links2 />
        </method>
        <method name="AppendEncoded" axOnly="1" axId="105" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Appends encoded binary data to the current data.  The ARG2  may be "Base64", "modBase64", "base64Url", "Base32", "Base58",  "QP" (for quoted-printable), "URL" (for url-encoding), "Hex", or any of the encodings found at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings List&lt;/a&gt;.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>encData</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encData</objcName>
                </arg>
                <arg>
                    <argName>encoding</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encoding</objcName>
                </arg>
            </args>
            <args2>
                <arg name="encData" type="string" objcName="encData" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>binData_encoding.asp</url>
                    <text>Demonstrate Binary Data Encoding Methods</text>
                </link>
            </links2>
        </method>
        <method name="Clear" axOnly="1" axId="106" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Clears the contents.</descrip>
            <iversion>9.5.0.51</iversion>
            <args />
            <args2 />
            <links2 />
        </method>
        <method name="LoadFile" axOnly="1" axId="108" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Loads data from a file.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>path</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>path</objcName>
                </arg>
            </args>
            <args2>
                <arg name="path" type="string" objcName="path" />
            </args2>
            <links2 />
        </method>
        <method name="GetBinaryChunk" axOnly="1" axId="109" outArgName="outBytes" ax="1" cpp="1" dn="1">
            <gType>bytes</gType>
            <descrip>Retrieves a chunk of the binary data contained within the object.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>offset</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>offset</objcName>
                </arg>
                <arg>
                    <argName>numBytes</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>numBytes</objcName>
                </arg>
                <arg>
                    <argName>outBytes</argName>
                    <cppType>CkByteData &amp;</cppType>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <args2>
                <arg name="offset" type="int" objcName="offset" />
                <arg name="numBytes" type="int" objcName="numBytes" />
            </args2>
            <links2 />
        </method>
        <method name="GetEncodedChunk" axOnly="1" axId="110" outArgName="outStr" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Retrieves a chunk of the binary data and returns it in encoded form. The ARG3  may be "Base64", "modBase64", "base64Url", "Base32", "Base58",  "QP" (for quoted-printable), "URL" (for url-encoding), "Hex", or any of the encodings found at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings List&lt;/a&gt;.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>offset</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>offset</objcName>
                </arg>
                <arg>
                    <argName>numBytes</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>numBytes</objcName>
                </arg>
                <arg>
                    <argName>encoding</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>encoding</objcName>
                </arg>
                <arg>
                    <argName>outStr</argName>
                    <cppType>CkString &amp;</cppType>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <args2>
                <arg name="offset" type="int" objcName="offset" />
                <arg name="numBytes" type="int" objcName="numBytes" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>binData_encoding.asp</url>
                    <text>Demonstrate Binary Data Encoding Methods</text>
                </link>
            </links2>
        </method>
        <method name="RemoveChunk" axOnly="1" axId="111" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>Removes a chunk of bytes from the binary data.</descrip>
            <iversion>9.5.0.51</iversion>
            <args>
                <arg>
                    <argName>offset</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>offset</objcName>
                </arg>
                <arg>
                    <argName>numBytes</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>numBytes</objcName>
                </arg>
            </args>
            <args2>
                <arg name="offset" type="int" objcName="offset" />
                <arg name="numBytes" type="int" objcName="numBytes" />
            </args2>
            <links2>
                <link linkType="example">
                    <url>binData_encoding.asp</url>
                    <text>Demonstrate Binary Data Encoding Methods</text>
                </link>
            </links2>
        </method>
        <method name="WriteFile" axId="112" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="path" type="string" objcName="path" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2 />
            <descrip>Writes the contents to a file.</descrip>
        </method>
        <method name="GetEncodedSb" axId="113" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Writes the encoded data to a StringBuilder.   The ARG1  may be "Base64", "modBase64", "base64Url", "Base32", "Base58",  "QP" (for quoted-printable), "URL" (for url-encoding), "Hex", or any of the encodings found at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings List&lt;/a&gt;.</descrip>
            <args2>
                <arg name="encoding" type="string" objcName="encoding" />
                <arg name="sb" type="StringBuilder" objcName="sb" />
            </args2>
            <iversion>9.5.0.64</iversion>
            <links2>
                <link linkType="example">
                    <url>binData_encoding.asp</url>
                    <text>Demonstrate Binary Data Encoding Methods</text>
                </link>
            </links2>
        </method>
        <method name="AppendBd" axId="114" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Appends the contents of another BinData to this object.</descrip>
            <args2>
                <arg name="binData" type="BinData" objcName="binData" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2 />
        </method>
        <method name="AppendString" axId="115" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Appends a string to this object.  (This does not append the BOM.  If a BOM is required, the AppendBom method can be called to append the appropriate BOM.)</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
                <arg name="charset" type="string" objcName="charset" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2>
                <link linkType="example">
                    <url>binData_appendString.asp</url>
                    <text>Appending Strings to BinData</text>
                </link>
            </links2>
        </method>
        <method name="AppendSb" axId="116" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Appends the contents of a StringBuilder to this object.</descrip>
            <args2>
                <arg name="sb" type="StringBuilder" objcName="sb" />
                <arg name="charset" type="string" objcName="charset" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2>
                <link linkType="example">
                    <url>stringBuilder_to_binData.asp</url>
                    <text>StringBuilder to Bytes (in BinData)</text>
                </link>
            </links2>
        </method>
        <method name="AppendBom" axId="117" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="charset" type="string" objcName="charset" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2>
                <link linkType="example">
                    <url>stringBuilder_to_binData.asp</url>
                    <text>StringBuilder to Bytes (in BinData)</text>
                </link>
            </links2>
            <descrip>Appends the appropriate BOM (byte order mark), also known as a "preamble", for the given charset.   If the ARG1 has no defined BOM, then nothing is appended.   An application would typically call this to append the utf-8, utf-16, or utf-32 BOM.</descrip>
        </method>
        <method name="AppendEncodedSb" axId="119" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Decodes the contents of ARG1 and appends the decoded bytes to this object.  The ARG2  may be "Base64", "modBase64", "base64Url", "Base32", "Base58",  "QP" (for quoted-printable), "URL" (for url-encoding), "Hex", or any of the encodings found at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings List&lt;/a&gt;.</descrip>
            <args2>
                <arg name="sb" type="StringBuilder" objcName="sb" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2 />
        </method>
        <method name="ContentsEqual" axId="120" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <args2>
                <arg name="binData" type="BinData" objcName="binData" />
            </args2>
            <iversion>9.5.0.62</iversion>
            <links2 />
            <descrip>Return _TRUE_ if the contents of this object equals the contents of ARG1.</descrip>
        </method>
    </methods>
    <properties>
        <property name="NumBytes" axId="107" axOnly="1" read="1" ax="1" cpp="1" dn="1" status="1">
            <gType>int</gType>
            <descrip>The number of bytes contained within the object.</descrip>
            <iversion>9.5.0.51</iversion>
            <links2 />
            <args2 />
        </property>
    </properties>
    <events />
    <clsid>FF6CA005-E9AA-418C-9555-3842B8BD54BB</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>DDD8463D-2F40-43F8-8C05-F9090816D65D</uuidMidl>
    <nextAxId>121</nextAxId>
</class>
