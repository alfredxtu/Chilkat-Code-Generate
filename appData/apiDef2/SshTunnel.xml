<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="281310497" license="Ssh" hasEvents="1" baseProgress="1" sourceXmlPath="C:/ck2000/appData/apiDef2/SshTunnel.xml">
    <axName>ChilkatSshTunnel</axName>
    <dnName>SshTunnel</dnName>
    <cppName>CkSshTunnel</cppName>
    <properties>
        <property name="AcceptLog" axId="151" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Contains an in-memory log of the listen thread.  This will only contain content if the KeepAcceptLog property is _TRUE_.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="AcceptLogPath" axId="152" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Specifies a log file to be kept for the activity in the listen thread.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2 />
            <args2 />
        </property>
        <property name="ConnectTimeoutMs" axId="102" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>Maximum number of milliseconds to wait when connecting to an SSH server.  The default value is 10000 (i.e. 10 seconds).  A value of 0 indicates no timeout (wait forever).</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="DestHostname" axId="103" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The destination hostname or IP address (in dotted decimal notation) of the service (such as a database server).  Data sent through the SSH tunnel is forwarded by the SSH server to this destination.  Data received from the destination (by the SSH server) is forwarded back to the client through the SSH tunnel.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="DestPort" axId="104" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>The destination port of the service (such as a database server).</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="DynamicPortForwarding" read="1" write="1" ax="1" cpp="1" dn="1" axId="140">
            <gType>bool</gType>
            <descrip>If _TRUE_, then this behaves as a SOCKS proxy server for inbound connections.    When this property is _TRUE_, the DestHostname and DestPort properties are unused because the destination IP:port is dynamically provided by the SOCKS client.  The default value of this property is _FALSE_.
&lt;p&gt;When dynamic port forwarding is used, the InboundSocksVersion property must be set to 4 or 5.  If inbound SOCKS5 is used, then the InboundSocksUsername and InboundSocksPassword may be set to the required login/password for a client to gain access.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2>
                <link linkType="example">
                    <url>sshTunnel_dpf.asp</url>
                    <text>SSH Tunnel with Dynamic Port Forwarding</text>
                </link>
            </links2>
            <args2 />
        </property>
        <property name="HttpProxyAuthMethod" axId="105" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>If an HTTP proxy requiring authentication is to be used, set this property to the HTTP proxy authentication method name.  Valid choices are "Basic" or "NTLM".
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through an HTTP proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="HttpProxyDomain" axId="106" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The NTLM authentication domain (optional) if NTLM authentication is used w/ the HTTP proxy.
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through an HTTP proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="HttpProxyHostname" axId="107" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>If an HTTP proxy is to be used, set this property to the HTTP proxy hostname or IPv4 address (in dotted decimal notation).
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through an HTTP proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="HttpProxyPassword" axId="108" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>If an HTTP proxy requiring authentication is to be used, set this property to the HTTP proxy password.
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through an HTTP proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="HttpProxyPort" axId="109" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>If an HTTP proxy is to be used, set this property to the HTTP proxy port number.  (Two commonly used HTTP proxy ports are 8080 and 3128.)
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through an HTTP proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="HttpProxyUsername" axId="110" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>If an HTTP proxy requiring authentication is to be used, set this property to the HTTP proxy login name.
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through an HTTP proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="IdleTimeoutMs" axId="111">
            <gType>int</gType>
            <descrip>A tunnel will fail when progress for sending or receiving data halts for more than this number of milliseconds.   The default value is 10,000 (which is 10 seconds).  A timeout of 0 indicates an infinite wait time (i.e. no timeout).</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="InboundSocksPassword" read="1" write="1" ax="1" cpp="1" dn="1" axId="142">
            <gType>string</gType>
            <descrip>If dynamic port forwarding is used, then this may be set to the password required for authenticating inbound connections.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2 />
            <args2 />
        </property>
        <property name="InboundSocksUsername" read="1" write="1" ax="1" cpp="1" dn="1" axId="141">
            <gType>string</gType>
            <descrip>If dynamic port forwarding is used, then this may be set to the username required for authenticating inbound connections.  If no username is set, then the inbound connection needs no authentication.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="IsAccepting" axId="112">
            <gType>bool</gType>
            <descrip>_TRUE_ if a background thread is running and accepting connections.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="KeepAcceptLog" axId="150" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>If _TRUE_, then an in-memory log of the listen thread is kept.  The default value is _FALSE_.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="KeepTunnelLog" axId="155" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>If _TRUE_, then a log of the SSH tunnel thread activity is kept in memory.  The default value is _FALSE_.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ListenBindIpAddress" axId="114">
            <gType>string</gType>
            <descrip>In most cases, this property does not need to be set.  It is provided for cases where it is required to bind the listen socket to a specific IP address (usually  for computers with multiple network interfaces or IP addresses).
For computers with a single network interface (i.e. most computers), this property should not be set.  For multihoming computers, the default IP address is automatically used if this property is not set.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="ListenPort" axId="115">
            <gType>int</gType>
            <descrip>If a port number equal to 0 is passed to BeginAccepting, then this property will contain the actual allocated port number used.  Otherwise it is equal to the port number passed to BeginAccepting, or 0 if BeginAccepting was never called.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="OutboundBindIpAddress" axId="117">
            <gType>string</gType>
            <descrip>In most cases, this property does not need to be set.  It is provided for cases where it is required to bind the socket that is to connect to the SSH server (in the background thread) to a specific IP address (usually  for computers with multiple network interfaces or IP addresses). 
For computers with a single network interface (i.e. most computers), this property should not be set.  For multihoming computers, the default IP address is automatically used if this property is not set.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="OutboundBindPort" axId="118">
            <gType>int</gType>
            <descrip>Unless there is a specific requirement for binding to a specific port, leave this unset (at the default value of 0).  (99.9% of all users should never need to set this property.)</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="SoRcvBuf" axId="119">
            <gType>int</gType>
            <descrip>Sets the receive buffer size socket option.   Normally, this property should be left unchanged.  The default value is 0, which indicates that the receive buffer size socket option should not be explicitly set (i.e. the system default value, which may vary from system to system, should be used).   
&lt;p&gt;
This property can be changed if download performance seems slow.  It is recommended to be a multiple of 4096.  To see the current system's default receive buffer size, examine the LastErrorText property after calling any method that establishes a connection.  It should be reported under the heading "SO_RCVBUF".  To boost performance, try setting it equal to 2, 3, or 4 times the default value.</descrip>
            <links>
                <link>
                    <text>More Information about TCP performance and Buffer Sizes</text>
                    <url>http://www.cknotes.com/?p=446</url>
                </link>
            </links>
            <links2>
                <link linkType="external">
                    <text>More Information about TCP performance and Buffer Sizes</text>
                    <url>http://www.cknotes.com/?p=446</url>
                </link>
            </links2>
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="SoSndBuf" axId="120">
            <gType>int</gType>
            <descrip>Sets the send buffer size socket option.   Normally, this property should be left unchanged.  The default value is 0, which indicates that the send buffer size socket option should not be explicitly set (i.e. the system default value, which may vary from system to system, should be used).   
&lt;p&gt;
This property can be changed if upload performance seems slow.  It is recommended to be a multiple of 4096.  To see the current system's default send buffer size, examine the LastErrorText property after calling any method that establishes a connection.  It should be reported under the heading "SO_SNDBUF".  To boost performance, try setting it equal to 2, 3, or 4 times the default value.</descrip>
            <links>
                <link>
                    <text>More Information about TCP performance and Buffer Sizes</text>
                    <url>http://www.cknotes.com/?p=446</url>
                </link>
            </links>
            <links2>
                <link linkType="external">
                    <text>More Information about TCP performance and Buffer Sizes</text>
                    <url>http://www.cknotes.com/?p=446</url>
                </link>
            </links2>
            <args2 />
        </property>
        <property name="SocksHostname" axId="121" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The SOCKS4/SOCKS5 hostname or IPv4 address (in dotted decimal notation).  This property is only used if the SocksVersion property is set to 4 or 5).
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through a SOCKS4 or SOCKS5 proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="SocksPassword" axId="122" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The SOCKS5 password (if required).  The SOCKS4 protocol does not include the use of a password, so this does not apply to SOCKS4.
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through a SOCKS4 or SOCKS5 proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="SocksPort" axId="123" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>The SOCKS4/SOCKS5 proxy port.  The default value is 1080. 
 This property only applies if a SOCKS proxy is used (if the SocksVersion property is set to 4 or 5).
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through a SOCKS4 or SOCKS5 proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="SocksUsername" axId="124" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>The SOCKS4/SOCKS5 proxy username.  This property is only used if the SocksVersion property is set to 4 or 5).
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through a SOCKS4 or SOCKS5 proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="SocksVersion" axId="125" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>SocksVersion
May be set to one of the following integer values:
&lt;p&gt;
&lt;b&gt;0&lt;/b&gt; - No SOCKS proxy is used.  This is the default.&lt;br&gt;
&lt;b&gt;4&lt;/b&gt; - Connect via a SOCKS4 proxy.&lt;br&gt;
&lt;b&gt;5&lt;/b&gt; - Connect via a SOCKS5 proxy.
&lt;p&gt;Note: This is for the outbound connection to the SSH server.  It is used when the outbound connection to the SSH server must go through a SOCKS4 or SOCKS5 proxy.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="TcpNoDelay" axId="130">
            <gType>bool</gType>
            <descrip>Controls whether the TCP_NODELAY socket option is used for the underlying TCP/IP socket.  The default value is _FALSE_.  Setting this property equal to _TRUE_ disables the Nagle algorithm and allows for better performance when small amounts of data are sent.</descrip>
            <links2 />
            <args2 />
        </property>
        <property name="TunnelLog" axId="154" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Contains an in-memory log of the SSH tunnel  thread.  This will only contain content if the KeepTunnelLog property is _TRUE_.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2 />
            <args2 />
        </property>
        <property name="TunnelLogPath" axId="153" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Set to keep a log file of the SSH tunnel  thread.</descrip>
            <iversion>9.5.0.50</iversion>
            <links2 />
            <args2 />
        </property>
        <property name="HostKeyFingerprint" read="1" ax="1" cpp="1" dn="1" axId="160">
            <gType>string</gType>
            <descrip>Set after connecting to an SSH server.  The format of the fingerprint looks like this:  "ssh-rsa 1024 68:ff:d1:4e:6c:ff:d7:b0:d6:58:73:85:07:bc:2e:d5"</descrip>
            <iversion>9.5.0.56</iversion>
            <links2 />
            <args2 />
        </property>
        <property name="AbortCurrent" read="1" write="1" ax="1" cpp="1" dn="1" axId="161">
            <gType>bool</gType>
            <descrip>When set to _TRUE_, causes the currently running method to abort.  Methods that always finish quickly (i.e.have no length file operations or network communications) are not affected.  If no method is running, then this property is automatically reset to _FALSE_ when the next method is called.  When the abort occurs, this property is reset to _FALSE_.  Both synchronous and asynchronous method calls can be aborted.  (A synchronous method call could be aborted by setting this property from a separate thread.)</descrip>
            <iversion>9.5.0.58</iversion>
            <links2 />
            <args2 />
        </property>
    </properties>
    <methods>
        <method name="AuthenticatePk" axId="145" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>username</argName>
                    <objcName>username</objcName>
                </arg>
                <arg>
                    <axType>SshKey</axType>
                    <dnType>SshKey</dnType>
                    <cppType>CkSshKey &amp;</cppType>
                    <argName>privateKey</argName>
                    <objcName>privateKey</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="external">
                    <text>Beware of too much time between connect and authentication.</text>
                    <url>http://www.cknotes.com/?p=278</url>
                </link>
                <link linkType="example">
                    <url>sshtunnel_use_ppk_putty_private_key.asp</url>
                    <text>Use PuTTY Key for SSH Tunnel (PPK Private Key)</text>
                </link>
            </links2>
            <iversion>9.5.0.50</iversion>
            <args2>
                <arg name="username" type="string" objcName="username" />
                <arg name="privateKey" type="SshKey" objcName="privateKey" />
            </args2>
            <descrip>Authenticates with the SSH server using public-key authentication.  The corresponding public key must have been installed on the SSH server for the ARG1.   Authentication will succeed if the matching ARG2 is provided.
&lt;p&gt;
Important: When reporting problems, please send the full contents of the LastErrorText property to support@chilkatsoft.com.</descrip>
        </method>
        <method name="AuthenticatePw" axId="144" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>login</argName>
                    <objcName>login</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>password</argName>
                    <objcName>password</objcName>
                </arg>
            </args>
            <descrip>Authenticates with the SSH server using a ARG1 and ARG2.
&lt;p&gt;
An SSH session always begins by first calling Connect to connect to the SSH server, and then calling either AuthenticatePw or AuthenticatePk to login.
&lt;p&gt;
Important: When reporting problems, please send the full contents of the LastErrorText property to support@chilkatsoft.com.
&lt;br&gt;
Note: To learn about how to handle password change requests, see the PasswordChangeRequested property (above).</descrip>
            <links2>
                <link linkType="external">
                    <text>Beware of too much time between connect and authentication.</text>
                    <url>http://www.cknotes.com/?p=278</url>
                </link>
            </links2>
            <iversion>9.5.0.50</iversion>
            <args2>
                <arg name="login" type="string" objcName="login" />
                <arg name="password" type="string" objcName="password" />
            </args2>
        </method>
        <method name="AuthenticatePwPk" axId="146" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>username</argName>
                    <objcName>username</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>password</argName>
                    <objcName>password</objcName>
                </arg>
                <arg>
                    <axType>SshKey</axType>
                    <dnType>SshKey</dnType>
                    <cppType>CkSshKey &amp;</cppType>
                    <argName>privateKey</argName>
                    <objcName>privateKey</objcName>
                </arg>
            </args>
            <descrip>Authentication for SSH servers that require both a password and private key.  (Most SSH servers are configured to require one or the other, but not both.)
&lt;p&gt;
Important: When reporting problems, please send the full contents of the LastErrorText property to support@chilkatsoft.com.</descrip>
            <iversion>9.5.0.50</iversion>
            <args2>
                <arg name="username" type="string" objcName="username" />
                <arg name="password" type="string" objcName="password" />
                <arg name="privateKey" type="SshKey" objcName="privateKey" />
            </args2>
            <links2 />
        </method>
        <method name="BeginAccepting" axId="139" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>listenPort</argName>
                    <objcName>listenPort</objcName>
                </arg>
            </args>
            <descrip>Starts a background thread for listening on ARG1.  A new SSH tunnel is created and managed for each accepted connection.  SSH tunnels are managed in a 2nd background thread:  the SSH tunnel pool thread.
&lt;p&gt;
BeginAccepting starts a background thread that creates a socket, binds to the port, and begins listening.  If the bind fails (meaning something else may have already bound to the same port), then the background thread exits.  You may check to see if BeginAccepting succeeds by waiting a short time (perhaps 50 millisec) and then examine the IsAccepting property.  If it is _FALSE_, then BeginAccepting failed.</descrip>
            <links2>
                <link linkType="example">
                    <text>SSH Tunnel for Database Connection (such as ADO, ODBC, etc.)</text>
                    <url>sshTunnel_database.asp</url>
                </link>
            </links2>
            <args2>
                <arg name="listenPort" type="int" objcName="listenPort" />
            </args2>
        </method>
        <method name="CloseTunnel" axId="148" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Closes the SSH tunnel and disconnects all existing clients.  If ARG1 is _TRUE_, the method will wait for the tunnel and client threads to exit before returning.</descrip>
            <iversion>9.5.0.50</iversion>
            <args>
                <arg>
                    <argName>waitForThreads</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>waitForThreads</objcName>
                </arg>
            </args>
            <args2>
                <arg name="waitForThreads" type="bool" objcName="waitForThreads" />
            </args2>
            <links2 />
        </method>
        <method name="Connect" axId="143" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <descrip>Connects to the SSH server to be used for SSH tunneling.</descrip>
            <args>
                <arg>
                    <argName>hostname</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>hostname</objcName>
                </arg>
                <arg>
                    <argName>port</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>port</objcName>
                </arg>
            </args>
            <iversion>9.5.0.50</iversion>
            <links2>
                <link linkType="example">
                    <url>sshTunnel_dpf.asp</url>
                    <text>SSH Tunnel with Dynamic Port Forwarding</text>
                </link>
            </links2>
            <args2>
                <arg name="hostname" type="string" objcName="hostname" />
                <arg name="port" type="int" objcName="port" />
            </args2>
        </method>
        <method name="DisconnectAllClients" axId="149" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Disconnects all clients, keeping the SSH tunnel open. If ARG1 is _TRUE_, the method will wait for the client threads to exit before returning.</descrip>
            <iversion>9.5.0.50</iversion>
            <args>
                <arg>
                    <argName>waitForThreads</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>waitForThreads</objcName>
                </arg>
            </args>
            <args2>
                <arg name="waitForThreads" type="bool" objcName="waitForThreads" />
            </args2>
            <links2 />
        </method>
        <method name="StopAccepting" axId="136" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <argName>waitForThread</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>waitForThread</objcName>
                </arg>
            </args>
            <descrip>Stops the listen background thread.  It is possible to continue accepting connections by re-calling BeginAccepting.  If ARG1 is _TRUE_, the method will wait for the listen thread to exit before returning.</descrip>
            <args2>
                <arg name="waitForThread" type="bool" objcName="waitForThread" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="UnlockComponent" axId="138">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>unlockCode</argName>
                    <objcName>unlockCode</objcName>
                </arg>
            </args>
            <descrip>Unlocks the component. This must be called once prior to calling any other method.  A fully-functional 30-day trial is automatically started when an arbitrary string is passed to this method.  For example, passing "Hello", or "abc123" will unlock the component for the 1st thirty days after the initial install.</descrip>
            <args2>
                <arg name="unlockCode" type="string" objcName="unlockCode" />
            </args2>
            <links2>
                <link linkType="external">
                    <text>Diagnosing UnlockComponent Problems</text>
                    <url>http://www.cknotes.com/?p=168</url>
                </link>
                <link linkType="external">
                    <text>UnlockComponent LastErrorText shows exact string passed to it.</text>
                    <url>http://www.cknotes.com/?p=315</url>
                </link>
                <link linkType="external">
                    <text>Verify UnlockComponent Success w/ Purchased Unlock Code</text>
                    <url>http://www.cknotes.com/?p=317</url>
                </link>
                <link linkType="external">
                    <text>LastErrorText Standard Information</text>
                    <url>http://www.cknotes.com/?p=316</url>
                </link>
            </links2>
        </method>
        <method name="ConnectThroughSsh" ax="1" cpp="1" dn="1" events="1" status="1" axId="159">
            <gType>bool</gType>
            <descrip>Connects to an SSH  server through an existing SSH connection.  The ARG1 is an existing connected and authenticated SSH object.   The connection to ARG2:ARG3 is made through the existing SSH connection via port-forwarding.  If successful, the connection is as follows:  application =&gt; ServerSSH1 =&gt; ServerSSH2.  (where ServerSSH1 is the ARG1 and ServerSSH2 is the SSH server at ARG2:ARG3)   Once connected in this way, all communications are routed through ServerSSH1 to ServerSSH2.  This includes authentication -- which means the application must still call one of the Authenticate* methods to authenticate with ServerSSH2.</descrip>
            <iversion>9.5.0.55</iversion>
            <args>
                <arg>
                    <argName>ssh</argName>
                    <cppType>CkSsh &amp;</cppType>
                    <dnType>Ssh</dnType>
                    <axType>Ssh</axType>
                    <objcName>ssh</objcName>
                </arg>
                <arg>
                    <argName>hostname</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>hostname</objcName>
                </arg>
                <arg>
                    <argName>port</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>port</objcName>
                </arg>
            </args>
            <args2>
                <arg name="ssh" type="Ssh" objcName="ssh" />
                <arg name="hostname" type="string" objcName="hostname" />
                <arg name="port" type="int" objcName="port" />
            </args2>
            <links2 />
        </method>
        <method name="IsSshConnected" axId="162" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>Returns _TRUE_  if connected to the SSH server.  Returns _FALSE_ if the connection has been lost (or was never established).</descrip>
            <args2 />
            <iversion>9.5.0.61</iversion>
            <links2 />
        </method>
        <method name="GetCurrentState" axId="163" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <args2 />
            <iversion>9.5.0.65</iversion>
            <links2 />
            <descrip>Returns the current state of existing tunnels in an XML string.</descrip>
        </method>
    </methods>
    <events>
        <standard name="AbortCheck" />
    </events>
    <genericName>SshTunnel</genericName>
    <description>The SSH tunnel class provides for the ability to run a self-contained SSH tunnel in a background thread.  It can behave as a SOCKS proxy, accepting connections from SOCKS4 or SOCK5 proxy clients and fowarding connections through an SSH tunnel.  This is the "dynamic port forwarding" mode of operation.  It can also behave in a static port forwarding mode (where it accepts connections and forwards the connection to a pre-defined remote destination IP:port).</description>
    <clsid>D01DB5A3-B9B7-4837-9874-FBA5BA171976</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>B777D3CD-07A8-4E22-9AB2-EC62B7160ABF</uuidMidl>
    <nextAxId>164</nextAxId>
    <uuidEvents>8DDD06A6-7234-4309-AF8C-E41DD8BDA4FC</uuidEvents>
</class>
