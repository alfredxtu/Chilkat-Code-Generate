<?xml version="1.0" encoding="utf-8" ?>
<class license="Free" sourceXmlPath="C:/ck2000/appData/apiDef2/JsonArray.xml">
    <genericName>JsonArray</genericName>
    <cppName>CkJsonArray</cppName>
    <dnName>JsonArray</dnName>
    <axName>ChilkatJsonArray</axName>
    <description>Represents a JSON array, which contains an ordered list of JSON values, where each value can be a string, number, JSON object, JSON array, true, false, or null.</description>
    <methods>
        <method name="AddArrayAt" axId="114" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Inserts a new and empty JSON array member to the position indicated by ARG1.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="AddBoolAt" ax="1" cpp="1" dn="1" status="1" axId="116">
            <gType>bool</gType>
            <descrip>Inserts a new boolean member to the position indicated by ARG1.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="bool" objcName="value" />
            </args2>
        </method>
        <method name="AddIntAt" ax="1" cpp="1" dn="1" status="1" axId="117">
            <gType>bool</gType>
            <descrip>Inserts a new integer member to the position indicated by ARG1.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="int" objcName="value" />
            </args2>
        </method>
        <method name="AddNullAt" ax="1" cpp="1" dn="1" status="1" axId="118">
            <gType>bool</gType>
            <descrip>Inserts a new null  member to the position indicated by ARG1.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="AddNumberAt" ax="1" cpp="1" dn="1" status="1" axId="115">
            <gType>bool</gType>
            <descrip>Inserts a new numeric member to the position indicated by ARG1.  The ARG2 is an integer, float, or double already converted to a string in the format desired by the application.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>numericStr</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>numericStr</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>create_complex_json.asp</url>
                    <text>Create more Complex JSON Document</text>
                </link>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="numericStr" type="string" objcName="numericStr" />
            </args2>
        </method>
        <method name="AddObjectAt" ax="1" cpp="1" dn="1" status="1" axId="113">
            <gType>bool</gType>
            <descrip>Inserts a new and empty JSON object member to the position indicated by ARG1.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>create_complex_json.asp</url>
                    <text>Create more Complex JSON Document</text>
                </link>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="AddStringAt" ax="1" cpp="1" dn="1" status="1" axId="112">
            <gType>bool</gType>
            <descrip>Inserts a new string at  the position indicated by ARG1.  To prepend, pass an ARG1 of 0.  To append, pass an ARG1 of -1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>create_complex_json.asp</url>
                    <text>Create more Complex JSON Document</text>
                </link>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="string" objcName="value" />
            </args2>
        </method>
        <method name="ArrayAt" axId="101" ax="1" cpp="1" dn="1">
            <gType>JsonArray</gType>
            <descrip>Returns the JSON array that is the value of the Nth array element.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_nested_array.asp</url>
                    <text>JSON: Nested Array</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="BoolAt" axId="102" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>Returns the boolean value of the Nth array element.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
            <links2 />
        </method>
        <method name="DeleteAt" axId="119" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Deletes the array element at the given ARG1.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="IntAt" axId="103" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>Returns the integer value of the Nth array element.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_array_values.asp</url>
                    <text>JSON: Access Array Values</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="IsNullAt" axId="104" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>Returns the _TRUE_ if the Nth array element is null, otherwise returns _FALSE_.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="ObjectAt" axId="105" ax="1" cpp="1" dn="1">
            <gType>JsonObject</gType>
            <descrip>Returns the JSON object that is the value of the Nth array element.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_array_of_objects.asp</url>
                    <text>JSON: Array of Objects</text>
                </link>
                <link linkType="example">
                    <url>create_complex_json.asp</url>
                    <text>Create more Complex JSON Document</text>
                </link>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="SetBoolAt" ax="1" cpp="1" dn="1" status="1" axId="110">
            <gType>bool</gType>
            <descrip>Sets the boolean value of the Nth array element.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>bool</cppType>
                    <dnType>bool</dnType>
                    <axType>bool</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="bool" objcName="value" />
            </args2>
        </method>
        <method name="SetIntAt" ax="1" cpp="1" dn="1" status="1" axId="109">
            <gType>bool</gType>
            <descrip>Sets the integer value of the Nth array element.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="int" objcName="value" />
            </args2>
        </method>
        <method name="SetNullAt" ax="1" cpp="1" dn="1" status="1" axId="111">
            <gType>bool</gType>
            <descrip>Sets the Nth array element to the value of null.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
            <links2 />
        </method>
        <method name="SetNumberAt" ax="1" cpp="1" dn="1" status="1" axId="108">
            <gType>bool</gType>
            <descrip>Sets the numeric value of the Nth array element.   The ARG2 is an integer, float, or double already converted to a string in the format desired by the application.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="string" objcName="value" />
            </args2>
        </method>
        <method name="SetStringAt" ax="1" cpp="1" dn="1" status="1" axId="107">
            <gType>bool</gType>
            <descrip>Sets the string value of the Nth array element.   Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>value</argName>
                    <cppType>const char *</cppType>
                    <dnType>string</dnType>
                    <axType>string</axType>
                    <objcName>value</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_modify.asp</url>
                    <text>Modify Parts of JSON Document</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="string" objcName="value" />
            </args2>
        </method>
        <method name="StringAt" axId="106" ax="1" cpp="1" dn="1" outArgName="outStr">
            <gType>string</gType>
            <descrip>Returns the string value of the Nth array element.  Indexing is 0-based (the 1st member is at index 0).</descrip>
            <iversion>9.5.0.56</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <argName>outStr</argName>
                    <cppType>CkString &amp;</cppType>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <links2>
                <link linkType="example">
                    <url>json_array_values.asp</url>
                    <text>JSON: Access Array Values</text>
                </link>
            </links2>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method name="Emit" axId="120" outArgName="outStr" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <descrip>Writes the JSON array (rooted at the caller) and returns as a string.
&lt;p&gt;
Note: To control the compact/non-compact format, and to control the LF/CRLF line-endings, set the EmitCompact and EmitCrlf properties.</descrip>
            <iversion>9.5.0.58</iversion>
            <args>
                <arg>
                    <argName>outStr</argName>
                    <cppType>CkString &amp;</cppType>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <args2 />
            <links2 />
        </method>
        <method name="TypeAt" ax="1" cpp="1" dn="1" axId="121">
            <gType>int</gType>
            <descrip>Returns the type of data at the given ARG1.   Possible return values are:
&lt;ol&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;object&lt;/li&gt;
&lt;li&gt;array&lt;/li&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;/ol&gt;
Returns -1 if no member exists at the given ARG1.</descrip>
            <iversion>9.5.0.58</iversion>
            <args>
                <arg>
                    <argName>index</argName>
                    <cppType>int</cppType>
                    <dnType>int</dnType>
                    <axType>int</axType>
                    <objcName>index</objcName>
                </arg>
            </args>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
            <links2 />
        </method>
        <method name="LoadSb" axId="122" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="sb" type="StringBuilder" objcName="sb" />
            </args2>
            <iversion>9.5.0.64</iversion>
            <links2>
                <link linkType="example">
                    <url>jsonarray_load.asp</url>
                    <text>Load a JsonArray</text>
                </link>
            </links2>
            <descrip>Loads a JSON array from a StringBuilder.  A JSON array must begin with a "[" and end with a "]".
&lt;p&gt;
Note: The Load method causes the JsonArray to detach and become it's own JSON document.  It should only be called on new instances of the JsonArray.  See the example below.</descrip>
        </method>
        <method name="Load" axId="123" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Loads a JSON array from a string.  A JSON array must begin with a "[" and end with a "]".
&lt;p&gt;
Note: The Load method causes the JsonArray to detach and become it's own JSON document.  It should only be called on new instances of the JsonArray.  See the example below.</descrip>
            <args2>
                <arg name="jsonArray" type="string" objcName="jsonArray" />
            </args2>
            <iversion>9.5.0.64</iversion>
            <links2>
                <link linkType="example">
                    <url>jsonarray_load.asp</url>
                    <text>Load a JsonArray</text>
                </link>
                <link linkType="example">
                    <url>json_array_load_and_parse.asp</url>
                    <text>Loading and Parsing a JSON Array</text>
                </link>
            </links2>
        </method>
        <method name="EmitSb" axId="126" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Writes the JSON array to the ARG1.
&lt;p&gt;
Note: To control the compact/non-compact format, and to control the LF/CRLF line-endings, set the EmitCompact and EmitCrlf properties.</descrip>
            <args2>
                <arg name="sb" type="StringBuilder" objcName="sb" />
            </args2>
            <iversion>9.5.0.65</iversion>
            <links2 />
        </method>
    </methods>
    <properties>
        <property name="Size" axId="100" read="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>The number of JSON values in the array.</descrip>
            <iversion>9.5.0.56</iversion>
            <links2 />
            <args2 />
        </property>
        <property name="EmitCrlf" axId="124" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <args2 />
            <iversion>9.5.0.64</iversion>
            <links2 />
            <descrip>If _TRUE_ then the Emit method uses CRLF line-endings when emitting the non-compact (pretty-print) format.  If _FALSE_, then bare-LF's are emitted.  (The compact format emits to a single line with no end-of-line characters.)  Windows systems traditionally use CRLF line-endings, whereas Linux, Mac OS X, and other systems traditionally use bare-LF line-endings.
&lt;p&gt;
The default value is _TRUE_.</descrip>
        </property>
        <property name="EmitCompact" axId="125" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <args2 />
            <iversion>9.5.0.64</iversion>
            <links2 />
            <descrip>If _TRUE_ then the Emit method outputs  in the most compact form possible (a single-line with no extra whitespace).  If _FALSE_, then emits with whitespace and indentation to make the JSON human-readable.
&lt;p&gt;
The default value is _TRUE_.</descrip>
        </property>
    </properties>
    <events />
    <clsid>F8CB82D2-BECB-41EA-8356-B1F1A89E9DF1</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>06F8688C-465F-45DB-A2F5-E1E4EF222D39</uuidMidl>
    <nextAxId>127</nextAxId>
</class>
