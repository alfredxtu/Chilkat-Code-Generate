<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="120999658" sourceXmlPath="C:/ck2000/appData/apiDef2/MessageSet.xml" license="Bundle" noBaseEntries="1">
    <nextAxId>112</nextAxId>
    <dnName>MessageSet</dnName>
    <cppName>CkMessageSet</cppName>
    <properties>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="Count" axId="101">
            <gType>int</gType>
            <descrip>The number of message UIDs (or sequence numbers) in this message set.</descrip>
            <links2 />
            <args2 />
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="HasUids" axId="100">
            <gType>bool</gType>
            <descrip>If _TRUE_ then the message set contains UIDs, otherwise it contains sequence numbers.</descrip>
            <links2 />
            <args2 />
        </property>
    </properties>
    <methods>
        <method name="ContainsId" axId="102" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>msgId</argName>
                    <objcName>id</objcName>
                </arg>
            </args>
            <descrip>Returns _TRUE_ if the ARG1 is contained in the message set.</descrip>
            <args2>
                <arg name="msgId" type="int" objcName="id" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="FromCompactString" axId="103">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>str</argName>
                    <objcName>str</objcName>
                </arg>
            </args>
            <descrip>Loads the message set from a compact-string representation.
Here are some examples:
&lt;p&gt;
&lt;table border="1"&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Non-Compact String&lt;/td&gt;&lt;td&gt;&lt;p&gt;Compact String&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1,2,3,4,5&lt;/td&gt;&lt;td&gt;&lt;p&gt;1:5&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1,2,3,4,5,8,9,10&lt;/td&gt;&lt;td&gt;&lt;p&gt;1:5,8:10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1,3,4,5,8,9,10&lt;/td&gt;&lt;td&gt;&lt;p&gt;1,3:5,8:10&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</descrip>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="GetId" axId="104">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Returns the message ID of the Nth message in the set. (indexing begins at 0).    Returns -1 if the index is out of range.</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="InsertId" axId="105">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>id</argName>
                    <objcName>id</objcName>
                </arg>
            </args>
            <descrip>Inserts a message ID into the set. If the ID already exists, a duplicate is not inserted.</descrip>
            <args2>
                <arg name="id" type="int" objcName="id" />
            </args2>
            <links2 />
        </method>
        <method name="LoadTaskResult" ax="1" cpp="1" dn="1" noWinRT="1" status="1" axId="111">
            <gType>bool</gType>
            <descrip>Loads the message set from a completed asynchronous task.</descrip>
            <args>
                <arg>
                    <argName>task</argName>
                    <cppType>CkTask &amp;</cppType>
                    <dnType>Task</dnType>
                    <axType>Task</axType>
                    <objcName>task</objcName>
                </arg>
            </args>
            <iversion>9.5.0.52</iversion>
            <args2>
                <arg name="task" type="Task" objcName="task" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="RemoveId" axId="106">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>id</argName>
                    <objcName>id</objcName>
                </arg>
            </args>
            <descrip>Removes a message ID from the set.</descrip>
            <args2>
                <arg name="id" type="int" objcName="id" />
            </args2>
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="ToCommaSeparatedStr" axId="108" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns a string of comma-separated message IDs.  (This is the non-compact string format.)</descrip>
            <args2 />
            <links2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="ToCompactString" axId="107" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the set of message IDs represented as a compact string.
Here are some examples:
&lt;p&gt;
&lt;table border="1"&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Non-Compact String&lt;/td&gt;&lt;td&gt;&lt;p&gt;Compact String&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1,2,3,4,5&lt;/td&gt;&lt;td&gt;&lt;p&gt;1:5&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1,2,3,4,5,8,9,10&lt;/td&gt;&lt;td&gt;&lt;p&gt;1:5,8:10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1,3,4,5,8,9,10&lt;/td&gt;&lt;td&gt;&lt;p&gt;1,3:5,8:10&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</descrip>
            <args2 />
            <links2 />
        </method>
    </methods>
    <genericName>MessageSet</genericName>
    <description>Represents a collection of email message sequence numbers or UIDs on an IMAP server.</description>
    <clsid>2B5DD740-5E3F-420C-9526-976596516B4C</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>0F01CF8C-CE79-4812-8D55-3BD7CC34A318</uuidMidl>
    <axName>MessageSet</axName>
</class>
