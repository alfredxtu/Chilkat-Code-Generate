<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="156968501" license="Free" baseProgress="1" hasEvents="1" sourceXmlPath="C:/ck2000/appData/apiDef2/Atom.xml">
    <axName>ChilkatAtom</axName>
    <dnName>Atom</dnName>
    <cppName>CkAtom</cppName>
    <properties>
        <property write="0" name="NumEntries" axId="100" read="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip>Number of entries in the Atom document.</descrip>
            <args2 />
        </property>
        <property name="AbortCurrent" read="1" ax="1" cpp="1" dn="1" axId="140">
            <gType>bool</gType>
            <descrip>When set to _TRUE_, causes the currently running method to abort.  Methods that always finish quickly (i.e.have no length file operations or network communications) are not affected.  If no method is running, then this property is automatically reset to _FALSE_ when the next method is called.  When the abort occurs, this property is reset to _FALSE_.  Both synchronous and asynchronous method calls can be aborted.  (A synchronous method call could be aborted by setting this property from a separate thread.)</descrip>
            <iversion>9.5.0.58</iversion>
            <args2 />
        </property>
    </properties>
    <methods>
        <method name="AddElement" axId="101" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>value</argName>
                    <objcName>value</objcName>
                </arg>
            </args>
            <descrip>Adds a new element to the Atom document.  The tag is a string such as "title", "subtitle", "summary", etc.  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="value" type="string" objcName="value" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddElementDate" axId="102" deprecated="1" noxojo="1">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>date</axType>
                    <dnType>date</dnType>
                    <cppType>SYSTEMTIME &amp;</cppType>
                    <argName>dateTime</argName>
                    <objcName>dateTime</objcName>
                </arg>
            </args>
            <descrip>Adds a new date-formatted element to the Atom document.  The ARG1 is a string such as "created", "modified", "issued", etc.  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="dateTime" type="date" objcName="dateTime" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddElementDateStr" axId="103">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>dateTimeStr</argName>
                    <objcName>dateTimeStr</objcName>
                </arg>
            </args>
            <descrip>Adds a new date-formatted element to the Atom document.  The ARG1 is a string such as "created", "modified", "issued", etc.  The ARG2 should be an RFC822 formatted date/time string such as "Tue, 25 Sep 2012 12:25:32 -0500".  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="dateTimeStr" type="string" objcName="dateTimeStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddElementDt" axId="104">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>CkDateTime</axType>
                    <dnType>CkDateTime</dnType>
                    <cppType>CkDateTime &amp;</cppType>
                    <argName>dateTime</argName>
                    <objcName>dateTime</objcName>
                </arg>
            </args>
            <descrip>Adds a new date-formatted element to the Atom document.  The tag is a string such as "created", "modified", "issued", etc.  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="dateTime" type="CkDateTime" objcName="dateTime" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddElementHtml" axId="105">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>htmlStr</argName>
                    <objcName>htmlStr</objcName>
                </arg>
            </args>
            <descrip>Adds a new HTML formatted element to the Atom document.  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="htmlStr" type="string" objcName="htmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddElementXHtml" axId="106">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Adds a new XHTML formatted element to the Atom document.  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddElementXml" axId="107">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Adds a new XML formatted element to the Atom document.  Returns the index of the element added, or -1 for failure.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddEntry" axId="108">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Adds an "entry" Atom XML document to the caller's Atom document.</descrip>
            <args2>
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddLink" axId="109">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>rel</argName>
                    <objcName>rel</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>href</argName>
                    <objcName>href</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>title</argName>
                    <objcName>title</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>typ</argName>
                    <objcName>typ</objcName>
                </arg>
            </args>
            <descrip>Adds a link to the Atom document.</descrip>
            <args2>
                <arg name="rel" type="string" objcName="rel" />
                <arg name="href" type="string" objcName="href" />
                <arg name="title" type="string" objcName="title" />
                <arg name="typ" type="string" objcName="typ" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="AddPerson" axId="110">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>name</argName>
                    <objcName>name</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>uri</argName>
                    <objcName>uri</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>email</argName>
                    <objcName>email</objcName>
                </arg>
            </args>
            <descrip>Adds a person to the Atom document.  The tag should be a string such as "author", "contributor", etc.  If a piece of information is not known, an empty string or NULL value may be passed.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="name" type="string" objcName="name" />
                <arg name="uri" type="string" objcName="uri" />
                <arg name="email" type="string" objcName="email" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="DeleteElement" axId="111">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Removes the Nth occurrence of a given element from the Atom document.  Indexing begins at 0.  For example, to remove the 2nd category, set tag = "category" and index = 1.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="DeleteElementAttr" axId="112">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>attrName</argName>
                    <objcName>attrName</objcName>
                </arg>
            </args>
            <descrip>Remove an attribute from an element.The index should be 0 unless there are multiple elements having the same tag, in which case it selects the Nth occurrence based on the index ( 0 = first occurrence ).</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="attrName" type="string" objcName="attrName" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="DeletePerson" axId="113">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Deletes a person from the Atom document.  The tag is a string such as "author".  The index should be 0 unless there are multiple elements having the same tag, in which case it selects the Nth occurrence based on the index.  For example, DeletePerson("author",2) deletes the 3rd author.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" status="1" name="DownloadAtom" axId="114">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>url</argName>
                    <objcName>url</objcName>
                </arg>
            </args>
            <descrip>Download an Atom feed from the Internet and load it into the Atom object.</descrip>
            <args2>
                <arg name="url" type="string" objcName="url" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetElement" axId="115" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the content of the Nth element having a specified tag.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetElementAttr" axId="116" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>attrName</argName>
                    <objcName>attrName</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the value of an element's attribute.  The element is selected by the tag name and the index (the Nth element having a specific tag) and the attribute is selected by name.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="attrName" type="string" objcName="attrName" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetElementCount" axId="117">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
            </args>
            <descrip>The number of elements having a specific tag.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetElementDate" axId="118" deprecated="1" noxojo="1" outArgName="outSysTime">
            <gType systemtime="1">date</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>SYSTEMTIME &amp;</cppType>
                    <argName>outSysTime</argName>
                    <objcName>outSysTime</objcName>
                </arg>
            </args>
            <descrip>Returns an element's value as a date/time.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetElementDateStr" axId="119" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns an element's value as a date/time in an RFC822 formatted string, such as such as "Tue, 25 Sep 2012 12:25:32 -0500".</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetElementDt" axId="120">
            <gType>CkDateTime</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Returns an element's value as a date/time object.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetEntry" axId="121">
            <gType>Atom</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
            </args>
            <descrip>Returns the Nth entry as an Atom object. (Indexing begins at 0)</descrip>
            <args2>
                <arg name="index" type="int" objcName="index" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetLinkHref" axId="122" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>relName</argName>
                    <objcName>relName</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the href attribute of the link having a specified "rel" attribute (such as "service.feed", "alternate", etc.).</descrip>
            <args2>
                <arg name="relName" type="string" objcName="relName" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetPersonInfo" axId="123" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag2</argName>
                    <objcName>tag2</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns a piece of information about a person.  To get the 2nd author's name, call GetPersonInfo("author",1,"name").</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="tag2" type="string" objcName="tag2" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="GetTopAttr" axId="124" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>attrName</argName>
                    <objcName>attrName</objcName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Returns the value of an attribute on the top-level XML node. The tag of a top-level Atom XML node is typically "feed" or "entry", and it might have attributes such as "xmlns" and "xml:lang".</descrip>
            <args2>
                <arg name="attrName" type="string" objcName="attrName" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="HasElement" axId="125">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
            </args>
            <descrip>True (1) if the element exists in the Atom document.  Otherwise 0.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="LoadXml" axId="126">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Loads the Atom document from an XML string.</descrip>
            <args2>
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NewEntry" axId="127">
            <gType>void</gType>
            <args />
            <descrip>Initializes the Atom document to be a new "entry".</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="NewFeed" axId="128">
            <gType>void</gType>
            <args />
            <descrip>Initializes the Atom document to be a new "feed".</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="SetElementAttr" axId="129">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>attrName</argName>
                    <objcName>attrName</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>attrValue</argName>
                    <objcName>attrValue</objcName>
                </arg>
            </args>
            <descrip>Adds or replaces an attribute on an element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="attrName" type="string" objcName="attrName" />
                <arg name="attrValue" type="string" objcName="attrValue" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SetTopAttr" axId="130">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>attrName</argName>
                    <objcName>attrName</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>value</argName>
                    <objcName>value</objcName>
                </arg>
            </args>
            <descrip>Adds or replaces an attribute on the top-level XML node of the Atom document.</descrip>
            <args2>
                <arg name="attrName" type="string" objcName="attrName" />
                <arg name="value" type="string" objcName="value" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="ToXmlString" axId="131" outArgName="outStr">
            <gType>string</gType>
            <args>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outStr</argName>
                    <objcName>outStr</objcName>
                </arg>
            </args>
            <descrip>Serializes the Atom document to an XML string.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="UpdateElement" axId="132">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>value</argName>
                    <objcName>value</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of an element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="value" type="string" objcName="value" />
            </args2>
        </method>
        <method name="UpdateElementDate" axId="133" ax="1" cpp="1" dn="1" deprecated="1" noxojo="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>date</axType>
                    <dnType>date</dnType>
                    <cppType>SYSTEMTIME &amp;</cppType>
                    <argName>dateTime</argName>
                    <objcName>dateTime</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of a date-formatted element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="dateTime" type="date" objcName="dateTime" />
            </args2>
        </method>
        <method name="UpdateElementDateStr" axId="134" ax="1" cpp="1" dn="1">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>dateTimeStr</argName>
                    <objcName>dateTimeStr</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of a date-formatted element.  The ARG2 should be an RFC822 formatted date/time string.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="dateTimeStr" type="string" objcName="dateTimeStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="UpdateElementDt" axId="135">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>CkDateTime</axType>
                    <dnType>CkDateTime</dnType>
                    <cppType>CkDateTime &amp;</cppType>
                    <argName>dateTime</argName>
                    <objcName>dateTime</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of a date-formatted element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="dateTime" type="CkDateTime" objcName="dateTime" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="UpdateElementHtml" axId="136">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>htmlStr</argName>
                    <objcName>htmlStr</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of an HTML element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="htmlStr" type="string" objcName="htmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="UpdateElementXHtml" axId="137">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of an XHTML element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="UpdateElementXml" axId="138">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>xmlStr</argName>
                    <objcName>xmlStr</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of an XML element.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="xmlStr" type="string" objcName="xmlStr" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="UpdatePerson" axId="139">
            <gType>void</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>tag</argName>
                    <objcName>tag</objcName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                    <objcName>index</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>name</argName>
                    <objcName>name</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>uri</argName>
                    <objcName>uri</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>email</argName>
                    <objcName>email</objcName>
                </arg>
            </args>
            <descrip>Replaces the content of a person. To update the 3rd author, call UpdatePerson("author",2,"new name","new URL","new email").  If a piece of information is not known, pass an empty string or a NULL.</descrip>
            <args2>
                <arg name="tag" type="string" objcName="tag" />
                <arg name="index" type="int" objcName="index" />
                <arg name="name" type="string" objcName="name" />
                <arg name="uri" type="string" objcName="uri" />
                <arg name="email" type="string" objcName="email" />
            </args2>
        </method>
    </methods>
    <genericName>Atom</genericName>
    <events>
        <standard name="AbortCheck" />
        <standard name="ProgressInfo" />
        <standard name="TaskCompleted" />
    </events>
    <description>Represents an Atom document.  The Atom API allows one to download, create and modify Atom documents.</description>
    <clsid>3D80DB49-232B-4139-8697-E0202E8B8B8E</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidEvents>13F676C5-0385-4159-AE0B-5512EFE677A7</uuidEvents>
    <uuidMidl>784E1D7C-F1E5-472F-AA06-AA6F1563ED94</uuidMidl>
    <nextAxId>141</nextAxId>
</class>
