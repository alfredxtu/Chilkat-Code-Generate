<?xml version="1.0" encoding="utf-8" ?>
<class deprecated="1" windowsOnly="1" license="Free" sourceXmlPath="C:/ck2000/appData/apiDef2/Csp.xml">
    <axName>ChilkatCsp</axName>
    <dnName>Csp</dnName>
    <cppName>CkCsp</cppName>
    <properties>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="EncryptAlgorithm" axId="100">
            <gType>string</gType>
            <descrip>Returns the name of the currently selected encryption algorithm in the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="EncryptAlgorithmID" axId="101">
            <gType>int</gType>
            <descrip>Returns the ID of the currently selected encryption algorithm in the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="EncryptNumBits" axId="102">
            <gType>int</gType>
            <descrip>Returns the key-length of the currently selected encryption algorithm in the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="HashAlgorithm" axId="103">
            <gType>string</gType>
            <descrip>Returns the name of the currently selected hash algorithm in the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="HashAlgorithmID" axId="104">
            <gType>int</gType>
            <descrip>Returns the ID of the currently selected hash algorithm in the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="HashNumBits" axId="105">
            <gType>int</gType>
            <descrip>Returns the bit length of the currently selected hash algorithm in the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" windowsOnly="1" read="1" write="1" name="KeyContainerName" axId="106">
            <gType>string</gType>
            <descrip>The name of the currently selected key container within the currently selected CSP. The default is typically the name of the current logged-in user.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" windowsOnly="1" read="1" write="1" name="MachineKeyset" axId="107">
            <gType>bool</gType>
            <descrip>To be documented soon.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumEncryptAlgorithms" axId="108">
            <gType>int</gType>
            <descrip>The number of encryption algorithms provided by the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumHashAlgorithms" axId="109">
            <gType>int</gType>
            <descrip>The number of hash algorithms provided by the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumKeyContainers" axId="110">
            <gType>int</gType>
            <descrip>The number of key containers provided by the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumKeyExchangeAlgorithms" axId="111">
            <gType>int</gType>
            <descrip>The number of key exchange algorithms provided by the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="NumSignatureAlgorithms" axId="112">
            <gType>int</gType>
            <descrip>The number of signature algorithms provided by the currently selected CSP.</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="1" name="ProviderName" axId="113">
            <gType>string</gType>
            <descrip>The currently selected CSP. To select another CSP, simply set this property to the name of the CSP, such as "Microsoft Enhanced Cryptographic Provider v1.0". If the CSP is not available on your machine, the property value will not change. The initial and default value for this property is "Microsoft Base Cryptographic Provider v1.0".</descrip>
        </property>
        <property cpp="1" dn="1" ax="1" read="1" write="0" name="ProviderType" axId="114">
            <gType>int</gType>
            <descrip>This is an integer representing the type of CSP. (Chilkat uses it for internal use.)</descrip>
        </property>
    </properties>
    <methods>
        <method name="GetKeyContainerNames" axId="115" ax="1" cpp="1" dn="1" noObjC="1" windowsOnly="1">
            <gType>StringArray</gType>
            <args />
            <descrip />
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="HasEncryptAlgorithm" axId="116">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>name</argName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>numBits</argName>
                </arg>
            </args>
            <descrip>Returns true if the currently selected CSP contains an encryption algorithm matching the name and key length. Otherwise returns false.</descrip>
            <args2>
                <arg name="name" type="string" />
                <arg name="numBits" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="HasHashAlgorithm" axId="117">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>name</argName>
                </arg>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>numBits</argName>
                </arg>
            </args>
            <descrip>Returns true if the currently selected CSP contains a hash algorithm matching the name and bit length. Otherwise returns false.</descrip>
            <args2>
                <arg name="name" type="string" />
                <arg name="numBits" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="Initialize" axId="118">
            <gType>bool</gType>
            <args />
            <descrip>Intializes the Csp with the selected ProviderName.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="NthEncryptionAlgorithm" axId="119" outArgName="outName">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outName</argName>
                </arg>
            </args>
            <descrip>Returns the name of the Nth encryption algorithm provided by the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthEncryptionNumBits" axId="120">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
            </args>
            <descrip>Returns the key-length of the currently selected encryption algorithm in the currently selected CSP.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthHashAlgorithmName" axId="121" outArgName="outName">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outName</argName>
                </arg>
            </args>
            <descrip />
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthHashNumBits" axId="122">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
            </args>
            <descrip>Returns the bit length of the Nth hash algorithm provided by the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthKeyContainerName" axId="123" outArgName="outName">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outName</argName>
                </arg>
            </args>
            <descrip>Returns the Nth key container name in the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthKeyExchangeAlgorithm" axId="124" outArgName="outName">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outName</argName>
                </arg>
            </args>
            <descrip>Returns the Nth key exchange algorithm provided by the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthKeyExchangeNumBits" axId="125">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
            </args>
            <descrip>Returns the bit length of the Nth key exchange algorithm provided by the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthSignatureAlgorithm" axId="126" outArgName="outName">
            <gType>string</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
                <arg>
                    <cppType>CkString &amp;</cppType>
                    <argName>outName</argName>
                </arg>
            </args>
            <descrip>Returns the name of the Nth signature algorithm provided by the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="NthSignatureNumBits" axId="127">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>int</axType>
                    <dnType>int</dnType>
                    <cppType>int</cppType>
                    <argName>index</argName>
                </arg>
            </args>
            <descrip>Returns the bit length of the Nth signature algorithm provided by the currently selected CSP. Indexing begins at 0.</descrip>
            <args2>
                <arg name="index" type="int" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SetEncryptAlgorithm" axId="128">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>name</argName>
                </arg>
            </args>
            <descrip>Selects an encryption algorithm. The return value is the key-length of the algorithm. If the algorithm is not available, the return value is 0. (There usually is not a need to explicitly select the key length, because the key length can be part of the name, such as "AES 128", or it is determined by the CSP. For example, the Microsoft Enhanced CSP will return a 128-bit key length for RC2, whereas the Base CSP will return a 40-bit key length.)</descrip>
            <args2>
                <arg name="name" type="string" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SetHashAlgorithm" axId="129">
            <gType>int</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>name</argName>
                </arg>
            </args>
            <descrip>Selects a hash algorithm. The return value is the bit-length of the algorithm. If the algorithm is not available, the return value is 0.</descrip>
            <args2>
                <arg name="name" type="string" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" name="SetProviderMicrosoftBase" axId="130">
            <gType>bool</gType>
            <args />
            <descrip>Sets the CSP to the Base Microsoft Cryptographic Provider, which is the default.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="SetProviderMicrosoftEnhanced" axId="131">
            <gType>bool</gType>
            <args />
            <descrip>Sets the CSP to the Enhanced Microsoft Cryptographic Provider.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="SetProviderMicrosoftRsaAes" axId="132">
            <gType>bool</gType>
            <args />
            <descrip>Sets the CSP to the Microsoft Cryptographic RSA/AES Prototype Provider.</descrip>
            <args2 />
        </method>
        <method cpp="1" dn="1" ax="1" name="SetProviderMicrosoftStrong" axId="133">
            <gType>bool</gType>
            <args />
            <descrip>Sets the CSP to the Strong Microsoft Cryptographic Provider.</descrip>
            <args2 />
        </method>
    </methods>
    <genericName>Csp</genericName>
    <description>Represents a cryptographic service provider for selecting encryption, hashing, and digital signing algorithms.&lt;p&gt;&lt;b&gt;This class is specific to the Windows operating system, and therefore is only available on Windows systems.&lt;/b&gt;</description>
    <clsid>6A10A7BB-7828-4050-9BD3-F4D2D97C6AB5</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>26377592-38BD-42DC-9C8B-CB38900F250B</uuidMidl>
    <nextAxId>135</nextAxId>
</class>
