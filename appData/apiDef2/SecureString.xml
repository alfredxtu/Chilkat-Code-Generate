<?xml version="1.0" encoding="utf-8" ?>
<class sourceXmlPath="c:/ck2000/appData/apiDef2/SecureString.xml" license="Free" noBaseEntries="1">
    <methods>
        <method name="Access" read="1" write="1" axId="101" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <args2 />
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Returns the clear-text string value.</descrip>
        </method>
        <method name="Append" axId="102" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="str" type="string" objcName="str" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Appends a clear-text string to this secure string. The in-memory data will be decrypted, the string will be appended, and then it will be re-encrypted.  Can return _FALSE_ if the string has been marked as read-only via the ReadOnly property.</descrip>
        </method>
        <method name="AppendSecure" axId="103" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <descrip>Appends the contents of a secure string to this secure string. The in-memory data will be decrypted, the secure string will be appended, and then it will be re-encrypted.   Can return _FALSE_ if this string has been marked as read-only via the ReadOnly property.</descrip>
            <args2>
                <arg name="secStr" type="SecureString" objcName="secStr" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
        </method>
        <method name="VerifyHash" axId="104" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="hashVal" type="string" objcName="hashVal" />
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Verifies the ARG1 against the hash value stored for the current value of this secure string.  The MaintainHash property must've previously been set for this secure string to maintain an internal hash.   The ARG2 specifies the encoding of the ARG1.  It can be any of the binary encoding algorithms, such as "base64", "hex", and many more listed at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings&lt;/a&gt;</descrip>
        </method>
        <method name="SecStrEquals" axId="105" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="secStr" type="SecureString" objcName="secStr" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Returns _TRUE_ if the ARG1 equals the contents of this secure string.</descrip>
        </method>
        <method name="HashVal" axId="106" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <args2>
                <arg name="encoding" type="string" objcName="encoding" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Returns the hash value for the current value of this secure string.  The ARG1 specifies the encoding to be used.  It can be any of the binary encoding algorithms, such as "base64", "hex", and many more listed at &lt;a href="http://cknotes.com/chilkat-binary-encoding-list/"&gt;Chilkat Binary Encodings&lt;/a&gt;</descrip>
        </method>
        <method name="AppendSb" axId="108" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <descrip>Appends a clear-text string contained in a StringBuilder to this secure string. The in-memory data will be decrypted, the string will be appended, and then it will be re-encrypted.  Can return _FALSE_ if the string has been marked as read-only via the ReadOnly property.</descrip>
            <args2>
                <arg name="sb" type="StringBuilder" objcName="sb" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
        </method>
        <method name="LoadFile" axId="109" ax="1" cpp="1" dn="1" status="1">
            <gType>bool</gType>
            <args2>
                <arg name="path" type="string" objcName="path" />
                <arg name="charset" type="string" objcName="charset" />
            </args2>
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Loads the contents of a file into this secure string.  The current contents of this object are replaced with the new text from the file.</descrip>
        </method>
    </methods>
    <properties>
        <property name="MaintainHash" axId="100" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>string</gType>
            <args2 />
            <links2 />
            <iversion>9.5.0.71</iversion>
            <descrip>If set to the name of a hash algorithm, then a hash of the current string value is maintained.  This allows for the hash to be verified via the VerifyHash method.   Possible hash algorithm names are "sha1", "sha256", "sha384", "sha512", "md5", "md2", "ripemd160", "ripemd128","ripemd256", and "ripemd320".</descrip>
        </property>
        <property name="ReadOnly" axId="107" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>bool</gType>
            <args2 />
            <iversion>9.5.0.71</iversion>
            <links2 />
            <descrip>Can be set to _TRUE_ to make this secure string read-only (cannot be modified).</descrip>
        </property>
    </properties>
    <events />
    <genericName>SecureString</genericName>
    <cppName>CkSecureString</cppName>
    <dnName>SecureString</dnName>
    <axName>ChilkatSecureString</axName>
    <description>A string class that stores  the characters in memory in 256-bit AES CBC encrypted form. The encryption key will be a randomly-generated key.</description>
    <nextAxId>110</nextAxId>
    <clsid>5930D6DE-C26E-4543-B971-ED01FD1C7472</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidMidl>0652E658-CB05-447B-95E5-0FB06EB8C23B</uuidMidl>
</class>
