<?xml version="1.0" encoding="utf-8" ?>
<class XojoModuleId="367492331" license="Zip" baseProgress="1" hasEvents="1" sourceXmlPath="C:/ck2000/appData/apiDef2/Bz2.xml">
    <axName>ChilkatBz2</axName>
    <dnName>Bz2</dnName>
    <cppName>CkBz2</cppName>
    <properties>
        <property name="HeartbeatMs" axId="100" read="1" write="1" ax="1" cpp="1" dn="1">
            <gType>int</gType>
            <descrip />
        </property>
        <property name="AbortCurrent" read="1" write="1" ax="1" cpp="1" dn="1" axId="110">
            <gType>bool</gType>
            <descrip>When set to _TRUE_, causes the currently running method to abort.  Methods that always finish quickly (i.e.have no length file operations or network communications) are not affected.  If no method is running, then this property is automatically reset to _FALSE_ when the next method is called.  When the abort occurs, this property is reset to _FALSE_.  Both synchronous and asynchronous method calls can be aborted.  (A synchronous method call could be aborted by setting this property from a separate thread.)</descrip>
            <iversion>9.5.0.58</iversion>
        </property>
    </properties>
    <methods>
        <method name="CompressFile" axId="101" ax="1" cpp="1" dn="1" events="1" status="1">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>inFilename</argName>
                    <objcName>inPath</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>toPath</argName>
                    <objcName>toPath</objcName>
                </arg>
            </args>
            <descrip>Compresses a file to create a BZip2 compressed file (.bz2).</descrip>
            <args2>
                <arg name="inFilename" type="string" objcName="inPath" />
                <arg name="toPath" type="string" objcName="toPath" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="CompressFileToMem" axId="102" outArgName="outBytes">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>inFilename</argName>
                    <objcName>inPath</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outBytes</argName>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <descrip>BZip2 compresses a file to an in-memory image of a .bz2 file.</descrip>
            <args2>
                <arg name="inFilename" type="string" objcName="inPath" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" status="1" name="CompressMemToFile" axId="103">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>inData</argName>
                    <objcName>inData</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>toPath</argName>
                    <objcName>toPath</objcName>
                </arg>
            </args>
            <descrip>BZip2 compresses and creates a .bz2 file from in-memory data.</descrip>
            <args2>
                <arg name="inData" type="bytes" objcName="inData" />
                <arg name="toPath" type="string" objcName="toPath" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="CompressMemory" axId="104" outArgName="outBytes">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>inData</argName>
                    <objcName>inData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outBytes</argName>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <descrip>Compresses in-memory data to an in-memory image of a .bz2 file.</descrip>
            <args2>
                <arg name="inData" type="bytes" objcName="inData" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" status="1" name="UncompressFile" axId="105">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>inFilename</argName>
                    <objcName>inPath</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>toPath</argName>
                    <objcName>toPath</objcName>
                </arg>
            </args>
            <descrip>Unzips a .bz2 file.</descrip>
            <args2>
                <arg name="inFilename" type="string" objcName="inPath" />
                <arg name="toPath" type="string" objcName="toPath" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="UncompressFileToMem" axId="106" outArgName="outBytes">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>inFilename</argName>
                    <objcName>inPath</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outBytes</argName>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <descrip>Unzips a .bz2 file directly to memory.</descrip>
            <args2>
                <arg name="inFilename" type="string" objcName="inPath" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" status="1" name="UncompressMemToFile" axId="107">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>inData</argName>
                    <objcName>inData</objcName>
                </arg>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>toPath</argName>
                    <objcName>toPath</objcName>
                </arg>
            </args>
            <descrip>Unzips from an in-memory image of a .bz2 file to a file.</descrip>
            <args2>
                <arg name="inData" type="bytes" objcName="inData" />
                <arg name="toPath" type="string" objcName="toPath" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" events="1" name="UncompressMemory" axId="108" outArgName="outBytes">
            <gType>bytes</gType>
            <args>
                <arg>
                    <axType>bytes</axType>
                    <dnType>bytes</dnType>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>inData</argName>
                    <objcName>inData</objcName>
                </arg>
                <arg>
                    <cppType>CkByteData &amp;</cppType>
                    <argName>outBytes</argName>
                    <objcName>outBytes</objcName>
                </arg>
            </args>
            <descrip>Unzips from an in-memory image of a .bz2 file directly into memory.</descrip>
            <args2>
                <arg name="inData" type="bytes" objcName="inData" />
            </args2>
        </method>
        <method cpp="1" dn="1" ax="1" status="1" name="UnlockComponent" axId="109">
            <gType>bool</gType>
            <args>
                <arg>
                    <axType>string</axType>
                    <dnType>string</dnType>
                    <cppType>const char *</cppType>
                    <argName>regCode</argName>
                    <objcName>unlockCode</objcName>
                </arg>
            </args>
            <descrip>Unlocks the component allowing for the full functionality to be used.  If a purchased unlock code is passed, there is no expiration.  Any other string automatically begins a fully-functional 30-day trial the first time UnlockComponent is called.</descrip>
            <args2>
                <arg name="regCode" type="string" objcName="unlockCode" />
            </args2>
            <links2>
                <link linkType="external">
                    <text>Diagnosing UnlockComponent Problems</text>
                    <url>http://www.cknotes.com/?p=168</url>
                </link>
                <link linkType="external">
                    <text>UnlockComponent LastErrorText shows exact string passed to it.</text>
                    <url>http://www.cknotes.com/?p=315</url>
                </link>
                <link linkType="external">
                    <text>Verify UnlockComponent Success w/ Purchased Unlock Code</text>
                    <url>http://www.cknotes.com/?p=317</url>
                </link>
                <link linkType="external">
                    <text>LastErrorText Standard Information</text>
                    <url>http://www.cknotes.com/?p=316</url>
                </link>
            </links2>
        </method>
    </methods>
    <genericName>Bz2</genericName>
    <events>
        <standard name="AbortCheck" />
        <standard name="PercentDone" />
        <standard name="ProgressInfo" />
        <standard name="TaskCompleted" />
    </events>
    <description>Provides the ability to create and unzip .bz2 compressed files using the BZip2 compression algorithm.</description>
    <clsid>647EC4D1-B7EE-494D-9AE8-823C7FF683D9</clsid>
    <typeid>004CB902-F437-4D01-BD85-9E18836DA5C2</typeid>
    <uuidEvents>B696D7B7-ADCF-44A1-AF9E-52769C6B3B1B</uuidEvents>
    <uuidMidl>E597F80D-BF1A-44AD-A038-D6AC9881B335</uuidMidl>
    <nextAxId>111</nextAxId>
</class>
